# Generated by Django 5.1.10 on 2025-09-18 21:57

from django.db import migrations


def create_obligation_due_template(apps, schema_editor):
    EmailNotificationTemplate = apps.get_model('common', 'EmailNotificationTemplate')
    EmailNotificationTemplate.objects.create(
        name='Notice of Compliance Obligation Due',
        subject='BCIERS Notification – Compliance Obligation Due',
        body='''
            <p style="text-align: center;">Province of British Columbia</p>
            <p style="text-align: center;">B.C. Industrial Emissions Reporting System (BCIERS)</p>
            <br>
            <p>Dear {{operator_legal_name}},</p>
            <br>
            <p>You can now review your compliance obligation and take action to meet your obligation using the BC Industrial Emissions Reporting System (BCIERS).
            </p>
            <br>
            <p>Based on the information submitted in <b>{{operation_name}}</b>’s Annual Report for the {{compliance_period}} compliance period and the applicable compliance charge rate, a compliance obligation for excess emissions of {{tonnes_of_co2}} at an equivalent amount of  {{outstanding_balance}} is now payable.   </p>
            <br>
            <p>You have the option to use compliance units to meet part of your obligation. When you apply compliance units against your obligation, BCIERS automatically adjusts the equivalent monetary amount due on the invoice. To review your compliance obligation and how it was calculated, please log-into BCIERS at <a
              href="https://industrialemissions.gov.bc.ca/onboarding">https://industrialemissions.gov.bc.ca/onboarding</a>.</p><br>
            <p>To meet your compliance obligation:  </p>
            <ol>
            <li>Navigate to the Compliance module and click <em>My Compliance > Compliance Summaries</em>.</li>
            <li>Find your operation in the grid and click <em>Manage Obligation</em>.</li>
            </ol>
            <p>You must meet your compliance obligation by <b>November 30, {{year_due}}</b>.</p>
            <br>
            <p>
            <b>Please note:</b> Unmet obligations after the payment deadline of November 30 will be subject to daily compounding penalties, as well as interest under the <em>Financial Administration Act</em> (FAA).</p>
            <br >
            <p>
            <b>It may take up to five business days for payments to be processed and reconciled.</b> Once payment is received, BCIERS updates the obligation status accordingly. The Ministry uses the payment date to determine compliance with the deadline and whether a penalty exists. For clarity, the payment date is the date when payment is deposited to the B.C. OBPS bank account. If a payment date is on or before the deadline and processed after the deadline, BCIERS may temporarily show that a penalty exists until the payment is processed and the system refreshes the information. Please refer to the B.C. OBPS compliance module guidance document on our website for further information.  </p><br >
            <p><em>Please do not reply to this email. This email is auto-generated. If you have any questions, or need further assistance, please reach out to our support team at <a href="mailto:GHGRegulator@gov.bc.ca">GHGRegulator@gov.bc.ca</a></em></p>
            <br>
            <p>Best Regards,</p>
            <p>Ministry of Energy and Climate Solutions</p>
            <p>Email: <a href="mailto:GHGRegulator@gov.bc.ca">GHGRegulator@gov.bc.ca</a></p>
            <p>Website: <a href="https://www2.gov.bc.ca/gov/content/environment/climate-change/industry/bc-output-based-pricing-system">BC
              Government Website Link</a>
            </p>
        ''',
    )


def reverse_obligation_due_template(apps, schema_editor):
    EmailNotificationTemplate = apps.get_model('common', 'EmailNotificationTemplate')
    EmailNotificationTemplate.objects.filter(name='Notice of Compliance Obligation Due').delete()


class Migration(migrations.Migration):
    dependencies = [
        ('common', '0087_V4_1_0'),
    ]

    operations = [
        migrations.RunPython(
            create_obligation_due_template,
            reverse_obligation_due_template,
            elidable=True,
        )
    ]
