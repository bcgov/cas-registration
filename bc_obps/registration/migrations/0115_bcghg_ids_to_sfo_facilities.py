# Generated by Django 5.0.14 on 2025-05-21 17:40

from django.db import migrations
import common.lib.pgtrigger as pgtrigger

def assign_bcghg_ids_to_sfo_facilities(apps, schema_editor):
    """
    Forward-only migration to assign BCGHG IDs to SFO facilities if the operation has a BCGHG ID.
    """
    Facility = apps.get_model("registration", "Facility")
    Operation = apps.get_model("registration", "Operation")

    sfo_operations_with_bcghg_id = Operation.objects.filter(type="Single Facility Operation", bcghg_id__isnull=False)

    print('-----------------------BEFORE')
    print(f"Found {sfo_operations_with_bcghg_id.count()} SFO operations with BCGHG IDs.")
    print(f"Found {Facility.objects.filter(operation__type="Single Facility Operation", operation__bcghg_id__isnull=False).count()} facilities associated with those SFO operations.")
    print(f"SFO facilities with bcghgids before: {Facility.objects.filter(operation__type="Single Facility Operation",bcghg_id__isnull=False).count()}")

    with pgtrigger.ignore("registration.Facility:restrict_bcghg_id_unless_operation_registered"):
        for operation in sfo_operations_with_bcghg_id:
            facilities = Facility.objects.filter(operation=operation)
            if facilities.count() > 1:
                raise ValueError(
                    f"Expected 0 or 1 facility for operation {operation.id}, but found {facilities.count()}"
                )
            else:
                # Get the facility if there is one
                facility = facilities.first()
                if facility:
                    if facility.bcghg_id:
                        raise ValueError(
                            f"Facility {facility.name} already has a BCGHG ID: {facility.bcghg_id}"
                        )
                    # Assign the BCGHG ID to the facility
                    facility.bcghg_id = operation.bcghg_id
                    facility.save()

    print('-----------------------AFTER')
    print(f"Found {sfo_operations_with_bcghg_id.count()} SFO operations with BCGHG IDs.")
    print(f"Found {Facility.objects.filter(operation__type="Single Facility Operation", operation__bcghg_id__isnull=False).count()} facilities associated with those SFO operations.")
    print(f"SFO facilities with bcghgids after: {Facility.objects.filter(operation__type="Single Facility Operation",bcghg_id__isnull=False).count()}")


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0114_V3_2_1'),
    ]

    operations = [migrations.RunPython(
            code=assign_bcghg_ids_to_sfo_facilities,
            reverse_code=migrations.RunPython.noop,
            elidable=True,
        ),]
