# Generated by Django 5.0.14 on 2025-04-17 00:47

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0105_V2_3_0'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='facility',
            name='restrict_bcghg_id_unless_operation_registered',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='operation',
            name='restrict_bcghg_id_unless_registered',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='operation',
            name='restrict_boro_id_unless_registered',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='facility',
            trigger=pgtrigger.compiler.Trigger(
                name='restrict_bcghg_id_unless_operation_registered',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (NEW."bcghg_id_id" IS NOT NULL)',
                    func="\n                    if (\n                        select status\n                        from erc.operation\n                        where erc.operation.id = new.operation_id\n                    ) != 'Registered' and\n                    old.bcghg_id_id is null\n                    then\n                        raise exception 'Cannot assign bcghg_id to Facility unless the related Operation status is Registered';\n                    end if;\n                    return new;\n                ",
                    hash='9d70cccdf311948bdf8e8c36da2c3260624ebf42',
                    operation='INSERT OR UPDATE',
                    pgid='pgtrigger_restrict_bcghg_id_unless_operation_registered_51d82',
                    table='erc"."facility',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operation',
            trigger=pgtrigger.compiler.Trigger(
                name='restrict_bcghg_id_unless_registered',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (NEW."bcghg_id_id" IS NOT NULL)',
                    func="\n                    if new.status != 'Registered' and\n                       (tg_op = 'insert' or new.bcghg_id_id is distinct from old.bcghg_id_id) then\n                        raise exception 'Cannot assign bcghg_id to Operation unless status is Registered';\n                    end if;\n                    return new;\n                ",
                    hash='97b61f139765ceaa9d92224695c4618a11c5f8f8',
                    operation='INSERT OR UPDATE',
                    pgid='pgtrigger_restrict_bcghg_id_unless_registered_48253',
                    table='erc"."operation',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operation',
            trigger=pgtrigger.compiler.Trigger(
                name='restrict_boro_id_unless_registered',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (NEW."bc_obps_regulated_operation_id" IS NOT NULL)',
                    func="\n                    if new.status != 'Registered' and\n                        (tg_op = 'insert' or new.bc_obps_regulated_operation_id is distinct from old.bc_obps_regulateD_operation_id) then\n                            raise exception 'Cannot assign bc_obps_regulated_operation to Operation unless status is Registered';\n                    end if;\n                    return new;\n                ",
                    hash='553d06da330b77f856e65f4356e86c85c9e7f26c',
                    operation='INSERT OR UPDATE',
                    pgid='pgtrigger_restrict_boro_id_unless_registered_ba9a4',
                    table='erc"."operation',
                    when='BEFORE',
                ),
            ),
        ),
    ]
