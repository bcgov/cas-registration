# Generated by Django 4.2.8 on 2023-12-11 19:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.ca.models
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('registration', '0002_alter_historicaloperation_previous_year_attributable_emissions_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='historicaloperation',
            name='tax_exemption_id',
            field=models.CharField(
                blank=True,
                db_comment='The tax exemption ID of an operation when operation is approved',
                db_index=True,
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name='operation',
            name='tax_exemption_id',
            field=models.CharField(
                blank=True,
                db_comment='The tax exemption ID of an operation when operation is approved',
                max_length=255,
                null=True,
                unique=True,
            ),
        ),
        migrations.CreateModel(
            name='HistoricalMultipleOperator',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                (
                    'operator_index',
                    models.IntegerField(
                        db_comment='Index used to differentiate operators for this operation for saving/updating purposes'
                    ),
                ),
                ('legal_name', models.CharField(db_comment='The legal name of an operator', max_length=1000)),
                ('trade_name', models.CharField(db_comment='The trade name of an operator', max_length=1000)),
                ('cra_business_number', models.IntegerField(db_comment='The CRA business number of an operator')),
                (
                    'bc_corporate_registry_number',
                    models.IntegerField(db_comment='The BC corporate registry number of an operator'),
                ),
                (
                    'business_structure',
                    models.CharField(
                        blank=True, db_comment='The legal name of an operator', default='', max_length=1000
                    ),
                ),
                ('website', models.URLField(blank=True, db_comment='The website address of an operator', default='')),
                (
                    'percentage_ownership',
                    models.DecimalField(
                        blank=True,
                        db_comment='The percentage of the operation which this operator owns',
                        decimal_places=5,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    'physical_street_address',
                    models.CharField(
                        db_comment='The physical street address of an operator (where the operator is physically located)',
                        max_length=1000,
                    ),
                ),
                (
                    'physical_municipality',
                    models.CharField(db_comment='The physical municipality of an operator ', max_length=1000),
                ),
                (
                    'physical_province',
                    localflavor.ca.models.CAProvinceField(
                        db_comment='The physical street address of an operator, restricted to two-letter province postal abbreviations',
                        max_length=2,
                    ),
                ),
                (
                    'physical_postal_code',
                    localflavor.ca.models.CAPostalCodeField(
                        db_comment='The physical postal code address of an operator, limited to valid Canadian postal codes',
                        max_length=7,
                    ),
                ),
                (
                    'mailing_address_same_as_physical',
                    models.BooleanField(
                        db_comment='Whether or not the mailing address is the same as the physical address',
                        default=True,
                    ),
                ),
                (
                    'mailing_street_address',
                    models.CharField(db_comment='The mailing street address of an operator', max_length=1000),
                ),
                (
                    'mailing_municipality',
                    models.CharField(db_comment='The mailing municipality of an operator', max_length=1000),
                ),
                (
                    'mailing_province',
                    localflavor.ca.models.CAProvinceField(
                        db_comment='The mailing province of an operator, restricted to two-letter province postal abbreviations',
                        max_length=2,
                    ),
                ),
                (
                    'mailing_postal_code',
                    localflavor.ca.models.CAPostalCodeField(
                        db_comment='The mailing postal code of an operator, limited to valid Canadian postal codes',
                        max_length=7,
                    ),
                ),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'history_user',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The operation that this multiple operator is associated with',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operation',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical multiple operator',
                'verbose_name_plural': 'historical multiple operators',
                'db_table': 'erc_history"."multiple_operator_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
