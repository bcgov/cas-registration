# Generated by Django 5.0.6 on 2024-05-31 23:23

import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


def populate_operation_ownership_timeline(apps, schema_editor):
    """
    NOTE: This needs to be run after updating the operation references in the codebase
    OR we can run this once and add a Django Signal to update this field whenever an operation is created or updated
    """
    Operation = apps.get_model('registration', 'Operation')
    OperationOwnershipTimeline = apps.get_model('registration', 'OperationOwnershipTimeline')
    OperationType = apps.get_model('registration', 'OperationType')

    for operation in Operation.objects.all():
        operation_ownership_timeline = OperationOwnershipTimeline.objects.create(
            operation=operation,
            operator=operation.operator,
            operation_type=OperationType.objects.get(name=operation.type),
            name=operation.name,
            start_date=operation.created_at,
            created_by=operation.created_by,
            updated_by=operation.updated_by,
            archived_by=operation.archived_by,
            opt_in=operation.opt_in,
            operation_has_multiple_operators=operation.has_multiple_operators,
            point_of_contact=operation.point_of_contact,
        )
        operation_ownership_timeline.documents.set(operation.documents.all())
        operation_ownership_timeline.regulated_products.set(operation.regulated_products.all())
        operation_ownership_timeline.reporting_activities.set(operation.reporting_activities.all())
        operation_ownership_timeline.save()


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0018_facilitytype_historicaloperationtype_operationtype_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalOperationOwnershipTimeline',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(db_comment='The name of an operation', max_length=1000)),
                (
                    'operation_has_multiple_operators',
                    models.BooleanField(
                        db_comment='Whether or not the operation has multiple operators', default=False
                    ),
                ),
                (
                    'opt_in',
                    models.BooleanField(
                        blank=True,
                        db_comment='Whether or not the operation is required to register or is simply opting in. Only needed if the operation did not report the previous year.',
                        null=True,
                    ),
                ),
                (
                    'start_date',
                    models.DateTimeField(
                        blank=True, db_comment='The start date of the ownership of the operation', null=True
                    ),
                ),
                (
                    'end_date',
                    models.DateTimeField(
                        blank=True, db_comment='The end date of the ownership of the operation', null=True
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operation',
                    ),
                ),
                (
                    'operation_type',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The type of operation that the operator owned',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operationtype',
                    ),
                ),
                (
                    'operator',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operator',
                    ),
                ),
                (
                    'point_of_contact',
                    models.ForeignKey(
                        blank=True,
                        db_comment='Foreign key to the contact that is the point of contact',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.contact',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical operation ownership timeline',
                'verbose_name_plural': 'historical operation ownership timelines',
                'db_table': 'erc_history"."operation_ownership_timeline_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='OperationOwnershipTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(db_comment='The name of an operation', max_length=1000)),
                (
                    'operation_has_multiple_operators',
                    models.BooleanField(
                        db_comment='Whether or not the operation has multiple operators', default=False
                    ),
                ),
                (
                    'opt_in',
                    models.BooleanField(
                        blank=True,
                        db_comment='Whether or not the operation is required to register or is simply opting in. Only needed if the operation did not report the previous year.',
                        null=True,
                    ),
                ),
                (
                    'start_date',
                    models.DateTimeField(
                        blank=True, db_comment='The start date of the ownership of the operation', null=True
                    ),
                ),
                (
                    'end_date',
                    models.DateTimeField(
                        blank=True, db_comment='The end date of the ownership of the operation', null=True
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'documents',
                    models.ManyToManyField(blank=True, related_name='operation_ownerships', to='registration.document'),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='ownerships',
                        to='registration.operation',
                    ),
                ),
                (
                    'operation_type',
                    models.ForeignKey(
                        db_comment='The type of operation that the operator owned',
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='operation_ownerships',
                        to='registration.operationtype',
                    ),
                ),
                (
                    'operator',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='operation_ownerships',
                        to='registration.operator',
                    ),
                ),
                (
                    'point_of_contact',
                    models.ForeignKey(
                        blank=True,
                        db_comment='Foreign key to the contact that is the point of contact',
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='operation_ownerships',
                        to='registration.contact',
                    ),
                ),
                (
                    'regulated_products',
                    models.ManyToManyField(
                        blank=True, related_name='operation_ownerships', to='registration.regulatedproduct'
                    ),
                ),
                (
                    'reporting_activities',
                    models.ManyToManyField(
                        blank=True, related_name='operation_ownerships', to='registration.reportingactivity'
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."operation_ownership_timeline',
                'db_table_comment': 'A table to connect operations and operators',
            },
        ),
        migrations.AddConstraint(
            model_name='operationownershiptimeline',
            constraint=models.UniqueConstraint(
                condition=models.Q(('end_date__isnull', True)),
                fields=('operation',),
                name='unique_active_ownership_per_operation',
            ),
        ),
    ]
