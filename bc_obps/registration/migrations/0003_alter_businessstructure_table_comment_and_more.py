# Generated by Django 4.2.8 on 2024-02-09 21:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import localflavor.ca.models


class Migration(migrations.Migration):
    dependencies = [
        ('registration', '0002_prod_data'),
    ]

    operations = [
        migrations.AlterModelTableComment(
            name='businessstructure',
            table_comment='The business structure of an operator',
        ),
        migrations.RemoveField(
            model_name='historicaloperation',
            name='application_lead',
        ),
        migrations.RemoveField(
            model_name='operation',
            name='application_lead',
        ),
        migrations.AddField(
            model_name='historicaloperation',
            name='point_of_contact',
            field=models.ForeignKey(
                blank=True,
                db_comment='Foreign key to the contact that is the point of contact',
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.contact',
            ),
        ),
        migrations.AddField(
            model_name='historicaloperation',
            name='submission_date',
            field=models.DateTimeField(
                blank=True, db_comment='The time the user submitted the operation registration request', null=True
            ),
        ),
        migrations.AddField(
            model_name='operation',
            name='point_of_contact',
            field=models.ForeignKey(
                blank=True,
                db_comment='Foreign key to the contact that is the point of contact',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='operations',
                to='registration.contact',
            ),
        ),
        migrations.AddField(
            model_name='operation',
            name='submission_date',
            field=models.DateTimeField(
                blank=True, db_comment='The time the user submitted the operation registration request', null=True
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='municipality',
            field=models.CharField(
                blank=True, db_comment='Municipality of relevant location', max_length=1000, null=True
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='postal_code',
            field=localflavor.ca.models.CAPostalCodeField(
                blank=True,
                db_comment='Postal code of relevant location, limited to valid Canadian postal codes',
                max_length=7,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='province',
            field=localflavor.ca.models.CAProvinceField(
                blank=True,
                db_comment='Province of the relevant location, restricted to two-letter province postal abbreviations',
                max_length=2,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='street_address',
            field=models.CharField(
                blank=True, db_comment='Street address of relevant location)', max_length=1000, null=True
            ),
        ),
        migrations.AlterField(
            model_name='contact',
            name='address',
            field=models.ForeignKey(
                blank=True,
                db_comment='Foreign key to the address of a user or contact',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='contacts',
                to='registration.address',
            ),
        ),
        migrations.AlterField(
            model_name='document',
            name='description',
            field=models.CharField(blank=True, db_comment='Description of the document', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='municipality',
            field=models.CharField(
                blank=True, db_comment='Municipality of relevant location', max_length=1000, null=True
            ),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='postal_code',
            field=localflavor.ca.models.CAPostalCodeField(
                blank=True,
                db_comment='Postal code of relevant location, limited to valid Canadian postal codes',
                max_length=7,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='province',
            field=localflavor.ca.models.CAProvinceField(
                blank=True,
                db_comment='Province of the relevant location, restricted to two-letter province postal abbreviations',
                max_length=2,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='street_address',
            field=models.CharField(
                blank=True, db_comment='Street address of relevant location)', max_length=1000, null=True
            ),
        ),
        migrations.AlterField(
            model_name='historicaldocument',
            name='description',
            field=models.CharField(blank=True, db_comment='Description of the document', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='historicalmultipleoperator',
            name='website',
            field=models.URLField(blank=True, db_comment='The website address of an operator', null=True),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='status',
            field=models.CharField(
                choices=[
                    ('Not Started', 'Not Started'),
                    ('Pending', 'Pending'),
                    ('Approved', 'Approved'),
                    ('Declined', 'Declined'),
                    ('Changes Requested', 'Changes Requested'),
                ],
                db_comment='The status of an operation in the app (e.g. pending review)',
                default='Not Started',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='historicaloperator',
            name='bc_corporate_registry_number',
            field=models.CharField(
                db_comment='The BC corporate registry number of an operator',
                db_index=True,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message='BC Corporate Registry Number should be 1-3 letters followed by 7 digits.',
                        regex='^[A-Za-z]{1,3}[0-9]{7}$',
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name='historicaloperator',
            name='legal_name',
            field=models.CharField(db_comment='The legal name of an operator', db_index=True, max_length=1000),
        ),
        migrations.AlterField(
            model_name='historicaloperator',
            name='status',
            field=models.CharField(
                choices=[
                    ('Draft', 'Draft'),
                    ('Pending', 'Pending'),
                    ('Approved', 'Approved'),
                    ('Declined', 'Declined'),
                    ('Changes Requested', 'Changes Requested'),
                ],
                db_comment='The status of an operator in the app (e.g. draft)',
                default='Draft',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='historicalparentoperator',
            name='website',
            field=models.URLField(blank=True, db_comment='The website address of an operator', null=True),
        ),
        migrations.AlterField(
            model_name='historicaluseroperator',
            name='role',
            field=models.CharField(
                choices=[('admin', 'Admin'), ('reporter', 'Reporter'), ('pending', 'Pending')],
                db_comment='The role of a user associated with an operator (e.g. admin)',
                default='pending',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='historicaluseroperator',
            name='status',
            field=models.CharField(
                choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Declined', 'Declined')],
                db_comment='The status of a user operator in the app (e.g. pending review)',
                default='Pending',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='multipleoperator',
            name='business_structure',
            field=models.ForeignKey(
                db_comment='The business structure of an operator',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='multiple_operator',
                to='registration.businessstructure',
            ),
        ),
        migrations.AlterField(
            model_name='multipleoperator',
            name='website',
            field=models.URLField(blank=True, db_comment='The website address of an operator', null=True),
        ),
        migrations.AlterField(
            model_name='operation',
            name='naics_code',
            field=models.ForeignKey(
                db_comment="An operation or facility's NAICS code",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='%(class)ss',
                to='registration.naicscode',
            ),
        ),
        migrations.AlterField(
            model_name='operation',
            name='status',
            field=models.CharField(
                choices=[
                    ('Not Started', 'Not Started'),
                    ('Pending', 'Pending'),
                    ('Approved', 'Approved'),
                    ('Declined', 'Declined'),
                    ('Changes Requested', 'Changes Requested'),
                ],
                db_comment='The status of an operation in the app (e.g. pending review)',
                default='Not Started',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='bc_corporate_registry_number',
            field=models.CharField(
                db_comment='The BC corporate registry number of an operator',
                null=True,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message='BC Corporate Registry Number should be 1-3 letters followed by 7 digits.',
                        regex='^[A-Za-z]{1,3}[0-9]{7}$',
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='business_structure',
            field=models.ForeignKey(
                blank=True,
                db_comment='The business structure of an operator',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='operators',
                to='registration.businessstructure',
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='legal_name',
            field=models.CharField(db_comment='The legal name of an operator', max_length=1000, unique=True),
        ),
        migrations.AlterField(
            model_name='operator',
            name='physical_address',
            field=models.ForeignKey(
                db_comment='The physical address of an operator (where the operator is physically located)',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='operators_physical',
                to='registration.address',
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='status',
            field=models.CharField(
                choices=[
                    ('Draft', 'Draft'),
                    ('Pending', 'Pending'),
                    ('Approved', 'Approved'),
                    ('Declined', 'Declined'),
                    ('Changes Requested', 'Changes Requested'),
                ],
                db_comment='The status of an operator in the app (e.g. draft)',
                default='Draft',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='parentoperator',
            name='website',
            field=models.URLField(blank=True, db_comment='The website address of an operator', null=True),
        ),
        migrations.AlterField(
            model_name='useroperator',
            name='role',
            field=models.CharField(
                choices=[('admin', 'Admin'), ('reporter', 'Reporter'), ('pending', 'Pending')],
                db_comment='The role of a user associated with an operator (e.g. admin)',
                default='pending',
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name='useroperator',
            name='status',
            field=models.CharField(
                choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Declined', 'Declined')],
                db_comment='The status of a user operator in the app (e.g. pending review)',
                default='Pending',
                max_length=1000,
            ),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['type'], name='document_type_idx'),
        ),
        migrations.AddIndex(
            model_name='operation',
            index=models.Index(fields=['created_at'], name='operation_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='operation',
            index=models.Index(fields=['status'], name='operation_status_idx'),
        ),
        migrations.AddIndex(
            model_name='parentoperator',
            index=models.Index(fields=['child_operator'], name='po_child_operator_idx'),
        ),
        migrations.AddIndex(
            model_name='parentoperator',
            index=models.Index(fields=['business_structure'], name='po_business_structure_idx'),
        ),
        migrations.AddIndex(
            model_name='parentoperator',
            index=models.Index(fields=['physical_address'], name='po_physical_address_idx'),
        ),
        migrations.AddIndex(
            model_name='parentoperator',
            index=models.Index(fields=['mailing_address'], name='po_mailing_address_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['app_role'], name='user_app_role_idx'),
        ),
        migrations.AddConstraint(
            model_name='operation',
            constraint=models.UniqueConstraint(fields=('swrs_facility_id',), name='swrs_facility_id_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='operator',
            constraint=models.UniqueConstraint(
                fields=('cra_business_number',), name='cra_business_number_unique_constraint'
            ),
        ),
    ]
