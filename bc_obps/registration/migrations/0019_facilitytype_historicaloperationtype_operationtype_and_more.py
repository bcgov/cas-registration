# Generated by Django 5.0.6 on 2024-05-31 21:40

import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


def init_operation_types(apps, schema_editor):
    OperationType = apps.get_model('registration', 'OperationType')
    OperationType.objects.bulk_create(
        [
            OperationType(name='Single Facility Operation'),
            OperationType(name='Linear Facilities Operation'),
            OperationType(name='Electricity Import Operation'),
        ]
    )


def reverse_init_operation_types(apps, schema_editor):
    OperationType = apps.get_model('registration', 'OperationType')
    OperationType.objects.filter(
        name__in=['Single Facility Operation', 'Linear Facilities Operation', 'Electricity Import Operation']
    ).delete()


def init_facility_types(apps, schema_editor):
    FacilityType = apps.get_model('registration', 'FacilityType')
    FacilityType.objects.bulk_create(
        [
            FacilityType(name='Single Facility', operation_type_id='Single Facility Operation'),
            FacilityType(name='Large', operation_type_id='Linear Facilities Operation'),
            FacilityType(name='Medium', operation_type_id='Linear Facilities Operation'),
            FacilityType(name='Small Aggregate', operation_type_id='Linear Facilities Operation'),
        ]
    )


def reverse_init_facility_types(apps, schema_editor):
    FacilityType = apps.get_model('registration', 'FacilityType')
    FacilityType.objects.filter(name__in=['Single Facility', 'Large', 'Medium', 'Small Aggregate']).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0018_alter_address_table_comment_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_comment='The name of a facility type', max_length=1000, unique=True)),
            ],
            options={
                'db_table': 'erc"."facility_type',
                'db_table_comment': 'Facility types',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOperationType',
            fields=[
                ('name', models.CharField(db_comment='The name of an operation type', db_index=True, max_length=1000)),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical operation type',
                'verbose_name_plural': 'historical operation types',
                'db_table': 'erc_history"."operation_type_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='OperationType',
            fields=[
                (
                    'name',
                    models.CharField(
                        db_comment='The name of an operation type', max_length=1000, primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."operation_type',
                'db_table_comment': 'Operation types',
            },
        ),
        migrations.AlterModelOptions(
            name='facility',
            options={'verbose_name_plural': 'Facilities'},
        ),
        migrations.AlterModelOptions(
            name='historicalfacility',
            options={
                'get_latest_by': ('history_date', 'history_id'),
                'ordering': ('-history_date', '-history_id'),
                'verbose_name': 'historical facility',
                'verbose_name_plural': 'historical Facilities',
            },
        ),
        migrations.RemoveField(
            model_name='facility',
            name='name',
        ),
        migrations.RemoveField(
            model_name='facility',
            name='new_entrant',
        ),
        migrations.RemoveField(
            model_name='facility',
            name='operation',
        ),
        migrations.RemoveField(
            model_name='facility',
            name='type',
        ),
        migrations.RemoveField(
            model_name='historicalfacility',
            name='name',
        ),
        migrations.RemoveField(
            model_name='historicalfacility',
            name='new_entrant',
        ),
        migrations.RemoveField(
            model_name='historicalfacility',
            name='operation',
        ),
        migrations.RemoveField(
            model_name='historicalfacility',
            name='type',
        ),
        migrations.CreateModel(
            name='FacilityOwnershipTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'name',
                    models.CharField(
                        db_comment='The name of the facility when the operation owned it', max_length=1000
                    ),
                ),
                (
                    'start_date',
                    models.DateTimeField(
                        blank=True, db_comment='The start date of the ownership of the facility', null=True
                    ),
                ),
                (
                    'end_date',
                    models.DateTimeField(
                        blank=True, db_comment='The end date of the ownership of the facility', null=True
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'facility',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='ownerships',
                        to='registration.facility',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='facility_ownerships',
                        to='registration.operation',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
                (
                    'facility_type',
                    models.ForeignKey(
                        db_comment='The type of facility that the operation owned',
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='facility_ownerships',
                        to='registration.facilitytype',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."facility_ownership_timeline',
                'db_table_comment': 'A table to connect facilities and operations',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFacilityOwnershipTimeline',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'name',
                    models.CharField(
                        db_comment='The name of the facility when the operation owned it', max_length=1000
                    ),
                ),
                (
                    'start_date',
                    models.DateTimeField(
                        blank=True, db_comment='The start date of the ownership of the facility', null=True
                    ),
                ),
                (
                    'end_date',
                    models.DateTimeField(
                        blank=True, db_comment='The end date of the ownership of the facility', null=True
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'facility',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.facility',
                    ),
                ),
                (
                    'facility_type',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The type of facility that the operation owned',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.facilitytype',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operation',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical facility ownership timeline',
                'verbose_name_plural': 'historical facility ownership timelines',
                'db_table': 'erc_history"."facility_ownership_timeline_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFacilityType',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_comment='The name of a facility type', db_index=True, max_length=1000)),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'operation_type',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The type of operation that this facility type is associated with',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operationtype',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical facility type',
                'verbose_name_plural': 'historical facility types',
                'db_table': 'erc_history"."facility_type_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='facilitytype',
            name='operation_type',
            field=models.ForeignKey(
                db_comment='The type of operation that this facility type is associated with',
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='facility_types',
                to='registration.operationtype',
            ),
        ),
        migrations.AddConstraint(
            model_name='facilityownershiptimeline',
            constraint=models.UniqueConstraint(
                condition=models.Q(('end_date__isnull', True)),
                fields=('facility',),
                name='unique_active_ownership_per_facility',
            ),
        ),
        migrations.RunPython(init_operation_types, reverse_init_operation_types, elidable=True),
        migrations.RunPython(init_facility_types, reverse_init_facility_types, elidable=True),
    ]
