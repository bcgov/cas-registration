# Generated by Django 5.0.8 on 2024-08-20 00:58

import django.db.models.deletion
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0033_alter_historicaloperation_status_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Closure',
            fields=[
                (
                    'event_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='registration.event',
                    ),
                ),
                (
                    'event',
                    models.TextField(blank=True, db_comment='Rationale for closure or other details.', null=True),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('registration.event',),
        ),
        migrations.CreateModel(
            name='HistoricalClosure',
            fields=[
                (
                    'event_ptr',
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name='+',
                        to='registration.event',
                    ),
                ),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(db_comment='Primary key to identify the event', db_index=True, default=uuid.uuid4),
                ),
                ('effective_date', models.DateTimeField(db_comment='The effective date of the event')),
                (
                    'event',
                    models.TextField(blank=True, db_comment='Rationale for closure or other details.', null=True),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical closure',
                'verbose_name_plural': 'historical closures',
                'db_table': 'erc_history"."closure_event_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRestart',
            fields=[
                (
                    'event_ptr',
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name='+',
                        to='registration.event',
                    ),
                ),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(db_comment='Primary key to identify the event', db_index=True, default=uuid.uuid4),
                ),
                ('effective_date', models.DateTimeField(db_comment='The effective date of the event')),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical restart',
                'verbose_name_plural': 'historical restarts',
                'db_table': 'erc_history"."restart_event_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTemporaryShutdown',
            fields=[
                (
                    'event_ptr',
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name='+',
                        to='registration.event',
                    ),
                ),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(db_comment='Primary key to identify the event', db_index=True, default=uuid.uuid4),
                ),
                ('effective_date', models.DateTimeField(db_comment='The effective date of the event')),
                (
                    'description',
                    models.TextField(
                        blank=True, db_comment='Rationale for temporary shutdown or other details.', null=True
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical temporary shutdown',
                'verbose_name_plural': 'historical temporary shutdowns',
                'db_table': 'erc_history"."temporary_shutdown_event_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTransfer',
            fields=[
                (
                    'event_ptr',
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name='+',
                        to='registration.event',
                    ),
                ),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(db_comment='Primary key to identify the event', db_index=True, default=uuid.uuid4),
                ),
                ('effective_date', models.DateTimeField(db_comment='The effective date of the event')),
                (
                    'description',
                    models.TextField(db_comment='Description of the transfer or change in designated operator.'),
                ),
                (
                    'future_designated_operator',
                    models.CharField(
                        choices=[
                            ('My Operator', 'My Operator'),
                            ('Other Operator', 'Other Operator'),
                            ('Not Sure', 'Not Sure'),
                        ],
                        db_comment='The designated operator of the entit(y)/(ies) associated with the transfer, who will be responsible for matters related to GGERR.',
                        max_length=1000,
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[('Complete', 'Complete'), ('Pending', 'Pending'), ('Transferred', 'Transferred')],
                        db_comment='The status of the request to transfer an entity.',
                        default='Pending',
                        max_length=1000,
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical transfer',
                'verbose_name_plural': 'historical transfers',
                'db_table': 'erc_history"."transfer_event_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Restart',
            fields=[
                (
                    'event_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='registration.event',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('registration.event',),
        ),
        migrations.CreateModel(
            name='TemporaryShutdown',
            fields=[
                (
                    'event_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='registration.event',
                    ),
                ),
                (
                    'description',
                    models.TextField(
                        blank=True, db_comment='Rationale for temporary shutdown or other details.', null=True
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('registration.event',),
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                (
                    'event_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='registration.event',
                    ),
                ),
                (
                    'description',
                    models.TextField(db_comment='Description of the transfer or change in designated operator.'),
                ),
                (
                    'future_designated_operator',
                    models.CharField(
                        choices=[
                            ('My Operator', 'My Operator'),
                            ('Other Operator', 'Other Operator'),
                            ('Not Sure', 'Not Sure'),
                        ],
                        db_comment='The designated operator of the entit(y)/(ies) associated with the transfer, who will be responsible for matters related to GGERR.',
                        max_length=1000,
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[('Complete', 'Complete'), ('Pending', 'Pending'), ('Transferred', 'Transferred')],
                        db_comment='The status of the request to transfer an entity.',
                        default='Pending',
                        max_length=1000,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('registration.event',),
        ),
        migrations.AlterModelTableComment(
            name='event',
            table_comment='Concrete base model for all specific types of events (restart, shutdown, temporary closure, transfer).',
        ),
        migrations.RemoveConstraint(
            model_name='event',
            name='event_not_both_operation_and_facility',
        ),
        migrations.RemoveConstraint(
            model_name='event',
            name='event_cannot_have_both_operation_and_facility',
        ),
        migrations.RemoveConstraint(
            model_name='event',
            name='event_has_operation_or_facility',
        ),
        migrations.RemoveField(
            model_name='event',
            name='additional_data',
        ),
        migrations.RemoveField(
            model_name='event',
            name='facility',
        ),
        migrations.RemoveField(
            model_name='event',
            name='type',
        ),
        migrations.RemoveField(
            model_name='historicalevent',
            name='additional_data',
        ),
        migrations.RemoveField(
            model_name='historicalevent',
            name='facility',
        ),
        migrations.RemoveField(
            model_name='historicalevent',
            name='type',
        ),
        migrations.AddField(
            model_name='event',
            name='facilities',
            field=models.ManyToManyField(blank=True, related_name='events', to='registration.facility'),
        ),
        migrations.AddField(
            model_name='historicalclosure',
            name='archived_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicalclosure',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicalclosure',
            name='operation',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.operation',
            ),
        ),
        migrations.AddField(
            model_name='historicalclosure',
            name='updated_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicalrestart',
            name='archived_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicalrestart',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicalrestart',
            name='operation',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.operation',
            ),
        ),
        migrations.AddField(
            model_name='historicalrestart',
            name='updated_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicaltemporaryshutdown',
            name='archived_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicaltemporaryshutdown',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicaltemporaryshutdown',
            name='operation',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.operation',
            ),
        ),
        migrations.AddField(
            model_name='historicaltemporaryshutdown',
            name='updated_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicaltransfer',
            name='archived_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicaltransfer',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='historicaltransfer',
            name='operation',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.operation',
            ),
        ),
        migrations.AddField(
            model_name='historicaltransfer',
            name='other_operator',
            field=models.ForeignKey(
                blank=True,
                db_comment='The second operator who is involved in the transfer but is not reporting the event.',
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.operator',
            ),
        ),
        migrations.AddField(
            model_name='historicaltransfer',
            name='other_operator_contact',
            field=models.ForeignKey(
                blank=True,
                db_comment='Contact information for the other operator.',
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.contact',
            ),
        ),
        migrations.AddField(
            model_name='historicaltransfer',
            name='updated_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.user',
            ),
        ),
        migrations.AddField(
            model_name='transfer',
            name='other_operator',
            field=models.ForeignKey(
                db_comment='The second operator who is involved in the transfer but is not reporting the event.',
                on_delete=django.db.models.deletion.PROTECT,
                related_name='transfer_events',
                to='registration.operator',
            ),
        ),
        migrations.AddField(
            model_name='transfer',
            name='other_operator_contact',
            field=models.ForeignKey(
                db_comment='Contact information for the other operator.',
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='transfer_events',
                to='registration.contact',
            ),
        ),
    ]
