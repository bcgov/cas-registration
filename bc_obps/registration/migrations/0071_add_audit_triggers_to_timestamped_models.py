# Generated by Django 5.0.11 on 2025-01-30 18:23

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0070_V1_20_0'),
    ]

    operations = [
        migrations.AlterField(
            model_name='closureevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='contact',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='document',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='facility',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='facilitydesignatedoperationtimeline',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalclosureevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalcontact',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaldocument',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalfacility',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalfacilitydesignatedoperationtimeline',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalmultipleoperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaloperationdesignatedoperatortimeline',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaloperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaloptedinoperationdetail',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalparentoperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalpartneroperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalrestartevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaltemporaryshutdownevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaltransferevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicaluseroperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='historicalwellauthorizationnumber',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='multipleoperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='operation',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='operationdesignatedoperatortimeline',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='operator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='optedinoperationdetail',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='parentoperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='partneroperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='restartevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='temporaryshutdownevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='transferevent',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='useroperator',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='wellauthorizationnumber',
            name='created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='contact',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='aa11c7059de84b4ec568cd0b8ff9a9012e08ab6e',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_983b8',
                    table='erc"."contact',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='contact',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='a4adf214491c688b978fc71b8d118af73812e51b',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_5b391',
                    table='erc"."contact',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='document',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='ab60276d9c02fa8fbebf72f359ed5b8ea8bf04f0',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_e8a56',
                    table='erc"."document',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='document',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='ed7a2eb7e8d37f663374650dd5a0e9c5a05f6ff0',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_93a76',
                    table='erc"."document',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='facility',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='f65f83a9f5db89d452f502f8a78aa346590ca69f',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_f7e80',
                    table='erc"."facility',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='facility',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='a97802a4118d6a82601e7b50503f0fd8aa09c7ce',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_71bcb',
                    table='erc"."facility',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='facilitydesignatedoperationtimeline',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='b59ba4f535d89f96748d46463a25f289f5116799',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_62d10',
                    table='erc"."facility_designated_operation_timeline',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='facilitydesignatedoperationtimeline',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='147de2f14645976dd4fba7a85e290ece6a752084',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_6b036',
                    table='erc"."facility_designated_operation_timeline',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='multipleoperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='e56e00e4cba289674f69b27f8f9a3b6039857e4b',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_5b786',
                    table='erc"."multiple_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='multipleoperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='eabf55119e9b0bb9edbf01c855e53dbfc835bb2d',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_3b460',
                    table='erc"."multiple_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operation',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='3ede2722edef323b929eeed05342c4074f653939',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_7768e',
                    table='erc"."operation',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operation',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='1331925ac742a98d2d3bfd10630bd17cbb1bd7e5',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_16db9',
                    table='erc"."operation',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operationdesignatedoperatortimeline',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='397a4d67c7f47208fba94a693e35c15232ed243e',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_6c164',
                    table='erc"."operation_designated_operator_timeline',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operationdesignatedoperatortimeline',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='ad6bb77ae654fd3e4bf7d2ae53ab8457f659e23f',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_0ef04',
                    table='erc"."operation_designated_operator_timeline',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='927c29814d8e64c5627fc35ba7e0eea74022b75f',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_6c559',
                    table='erc"."operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='operator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='697f397caedd82f4067325a058e5c9f8776a7726',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_8b376',
                    table='erc"."operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='optedinoperationdetail',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='c3bf1ac9aadc1e333c7d23112c68cb1b3eb90572',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_4f8f7',
                    table='erc"."opted_in_operation_detail',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='optedinoperationdetail',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='6995de337cc78bba41743cc96227a7b495b738fd',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_2d317',
                    table='erc"."opted_in_operation_detail',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='parentoperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='5f086ed917167901f80303dc0bfc780314d6bcf2',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_41e31',
                    table='erc"."parent_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='parentoperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='4b47e4a389738f0fe82d60d90211f68ce5ace412',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_68e68',
                    table='erc"."parent_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='partneroperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='f4252a1898912041fd0b7ef07ec3ca1aeea4baa6',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_c09dc',
                    table='erc"."partner_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='partneroperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='8a4d49513400405d8c384ce6b03b6a870dd4fe1b',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_7daea',
                    table='erc"."partner_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='useroperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='49f6cda75a6512254fb3b630f69bcf76f960fbd1',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_6b40d',
                    table='erc"."user_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='useroperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='e9110999eb826946cb5610ed46c9904c71f4d333',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_8abfa',
                    table='erc"."user_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='wellauthorizationnumber',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid')); new.created_at = now(); return new;",
                    hash='a2ddea73ab912f743e26fa5fa1e72777bcdd1cf9',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_d3cf2',
                    table='erc"."well_authorization_number',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='wellauthorizationnumber',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid')); new.updated_at = now(); return new;",
                    hash='6f912e8d92e237ed2c0692c8b8c9661c366c587f',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_46b7d',
                    table='erc"."well_authorization_number',
                    when='BEFORE',
                ),
            ),
        ),
    ]
