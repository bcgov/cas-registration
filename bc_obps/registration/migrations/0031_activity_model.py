# Generated by Django 5.0.7 on 2024-08-13 17:11

import django.db.models.deletion
import simple_history.models
from django.db import migrations, models

# This migration creates a new Activity model that will replace the ReportingActivity model


class Migration(migrations.Migration):

    dependencies = [('registration', '0030_slug_and_weight_on_activity_model'), ('reporting', '0004_V1_6_0')]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'name',
                    models.CharField(
                        db_comment='The name of an activity. The activity names come from Schedule A of the British Columbia Greenhouse Gas Emission Reporting Regulation https://www.bclaws.gov.bc.ca/civix/document/id/lc/statreg/249_2015#ScheduleA',
                        max_length=1000,
                    ),
                ),
                (
                    'applicable_to',
                    models.CharField(
                        choices=[('sfo', 'Sfo'), ('lfo', 'Lfo'), ('all', 'All')],
                        db_comment='Which type of facility the activity applies to. An activity can be valid for only a Single Facility Operation, only a Linear Facility Operation or it can apply to both',
                        max_length=1000,
                    ),
                ),
                (
                    'slug',
                    models.CharField(
                        db_comment='A varchar slug to identify the activity on the frontend. This will be used to generate the routes to navigate to each activity',
                        max_length=50,
                    ),
                ),
                (
                    'weight',
                    models.FloatField(
                        db_comment='A weighted float value used to order activities. This will be used on the frontend to determine the order in which activity pages appear in an emissions report'
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."activity',
                'db_table_comment': 'Table containing activity definitions for reporting. If facilities carry out these activities, in many cases they are required to report. Some activities can only be carried out by certain types of facilities. Reporting activities are listed in column 2 of Table 1 of Schedule A of the Greenhouse Gas Industrial Reporting and Control Act: https://www.bclaws.gov.bc.ca/civix/document/id/lc/statreg/249_2015.',
            },
        ),
        migrations.CreateModel(
            name='HistoricalActivity',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                (
                    'name',
                    models.CharField(
                        db_comment='The name of an activity. The activity names come from Schedule A of the British Columbia Greenhouse Gas Emission Reporting Regulation https://www.bclaws.gov.bc.ca/civix/document/id/lc/statreg/249_2015#ScheduleA',
                        max_length=1000,
                    ),
                ),
                (
                    'applicable_to',
                    models.CharField(
                        choices=[('sfo', 'Sfo'), ('lfo', 'Lfo'), ('all', 'All')],
                        db_comment='Which type of facility the activity applies to. An activity can be valid for only a Single Facility Operation, only a Linear Facility Operation or it can apply to both',
                        max_length=1000,
                    ),
                ),
                (
                    'slug',
                    models.CharField(
                        db_comment='A varchar slug to identify the activity on the frontend. This will be used to generate the routes to navigate to each activity',
                        max_length=50,
                    ),
                ),
                (
                    'weight',
                    models.FloatField(
                        db_comment='A weighted float value used to order activities. This will be used on the frontend to determine the order in which activity pages appear in an emissions report'
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
            ],
            options={
                'verbose_name': 'historical activity',
                'verbose_name_plural': 'historical activitys',
                'db_table': 'erc_history"."activity_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.RemoveField(
            model_name='operation',
            name='reporting_activities',
        ),
        migrations.AddField(
            model_name='operation',
            name='activities',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='registration.activity'),
        ),
        migrations.CreateModel(
            name='HistoricalOperation_activities',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('m2m_history_id', models.AutoField(primary_key=True, serialize=False)),
                (
                    'activity',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace='',
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.activity',
                    ),
                ),
                (
                    'history',
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to='registration.historicaloperation',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        db_tablespace='',
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operation',
                    ),
                ),
            ],
            options={
                'verbose_name': 'HistoricalOperation_activities',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.DeleteModel(
            name='HistoricalOperation_reporting_activities',
        ),
        migrations.RunSQL(
            """
            INSERT INTO erc.activity (
                name,
                applicable_to,
                slug,
                weight
            )
            SELECT
                name,
                applicable_to,
                slug,
                weight
            FROM
                erc.reporting_activity;
        """,
            reverse_sql="""
            truncate erc.activity restart identity cascade;
        """,
        ),
        migrations.DeleteModel(name='ReportingActivity'),
        migrations.DeleteModel(
            name='HistoricalReportingActivity',
        ),
    ]
