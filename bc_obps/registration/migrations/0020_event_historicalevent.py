# Generated by Django 5.0.6 on 2024-06-04 21:19

import django.db.models.deletion
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0019_facilitytype_historicaloperationtype_operationtype_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_comment='Primary key to identify the event',
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('effective_date', models.DateTimeField(db_comment='The effective date of the event')),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('Closing or Temporary Shutdown', 'Closing Or Temporary Shutdown'),
                            ('Acquisition', 'Acquisition'),
                            ('Transfer of Control', 'Transfer Of Control'),
                            ('Divestment', 'Divestment'),
                        ],
                        db_comment='The type of the event',
                        max_length=100,
                    ),
                ),
                ('additional_data', models.JSONField(db_comment='Additional data about the event')),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'facility',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='events',
                        to='registration.facility',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='events',
                        to='registration.operation',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."event',
                'db_table_comment': 'Table containing information about events that occur in the lifecycle of an operation or facility.',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEvent',
            fields=[
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(db_comment='Primary key to identify the event', db_index=True, default=uuid.uuid4),
                ),
                ('effective_date', models.DateTimeField(db_comment='The effective date of the event')),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('Closing or Temporary Shutdown', 'Closing Or Temporary Shutdown'),
                            ('Acquisition', 'Acquisition'),
                            ('Transfer of Control', 'Transfer Of Control'),
                            ('Divestment', 'Divestment'),
                        ],
                        db_comment='The type of the event',
                        max_length=100,
                    ),
                ),
                ('additional_data', models.JSONField(db_comment='Additional data about the event')),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'facility',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.facility',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operation',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical event',
                'verbose_name_plural': 'historical events',
                'db_table': 'erc_history"."event_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
