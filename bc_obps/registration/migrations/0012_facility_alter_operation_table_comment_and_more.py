# Generated by Django 4.2.8 on 2024-04-24 14:46

from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0011_V1_4_0'),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_comment='Primary key to identify the facility',
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(db_comment='The name of a facility', max_length=1000)),
                ('type', models.CharField(db_comment='The type of a facility', max_length=1000)),
                ('new_entrant', models.BooleanField(db_comment='Whether or not the facility is a new entrant')),
                (
                    'address',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The address of the facility',
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='%(class)s_address',
                        to='registration.address',
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."facility',
                'db_table_comment': 'Contains data on facilities that emit carbon emissions and must report them to Clean Growth. A linear facility operation is made up of several different facilities whereas a single facility operation has only one facility. In the case of a single facility operation, much of the data in this table will overlap with the parent record in the operation table',
            },
        ),
        migrations.AlterModelTableComment(
            name='operation',
            table_comment='Operations',
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='bcghg_id',
            field=models.CharField(
                blank=True,
                db_comment="An operation's BCGHG identifier. Only needed if the operation/facility submitted a report the previous year.",
                max_length=1000,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='naics_code',
            field=models.ForeignKey(
                blank=True,
                db_comment="An operation's NAICS code",
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='registration.naicscode',
            ),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='name',
            field=models.CharField(db_comment='The name of an operation', max_length=1000),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='opt_in',
            field=models.BooleanField(
                blank=True,
                db_comment='Whether or not the operation is required to register or is simply opting in. Only needed if the operation did not report the previous year.',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='swrs_facility_id',
            field=models.IntegerField(
                blank=True,
                db_comment="An operation's SWRS facility ID. Only needed if the operation/facility submitted a report the previous year.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaloperation',
            name='type',
            field=models.CharField(db_comment='The type of an operation', max_length=1000),
        ),
        migrations.AlterField(
            model_name='operation',
            name='bcghg_id',
            field=models.CharField(
                blank=True,
                db_comment="An operation's BCGHG identifier. Only needed if the operation/facility submitted a report the previous year.",
                max_length=1000,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='operation',
            name='naics_code',
            field=models.ForeignKey(
                db_comment="An operation's NAICS code",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='operations',
                to='registration.naicscode',
            ),
        ),
        migrations.AlterField(
            model_name='operation',
            name='name',
            field=models.CharField(db_comment='The name of an operation', max_length=1000),
        ),
        migrations.AlterField(
            model_name='operation',
            name='opt_in',
            field=models.BooleanField(
                blank=True,
                db_comment='Whether or not the operation is required to register or is simply opting in. Only needed if the operation did not report the previous year.',
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='operation',
            name='swrs_facility_id',
            field=models.IntegerField(
                blank=True,
                db_comment="An operation's SWRS facility ID. Only needed if the operation/facility submitted a report the previous year.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='operation',
            name='type',
            field=models.CharField(db_comment='The type of an operation', max_length=1000),
        ),
        migrations.CreateModel(
            name='WellAuthorizationNumber',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'well_authorization_number',
                    models.IntegerField(
                        db_comment='A well authorization number from the BC Energy Regulator',
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'facility',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='well_authorization_numbers',
                        to='registration.facility',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."well_authorization_number',
                'db_table_comment': 'A table containing well authorization numbers. Facilities can have multiple well authorization numbers.',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWellAuthorizationNumber',
            fields=[
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'well_authorization_number',
                    models.IntegerField(
                        db_comment='A well authorization number from the BC Energy Regulator', db_index=True
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'facility',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.facility',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical well authorization number',
                'verbose_name_plural': 'historical well authorization numbers',
                'db_table': 'erc_history"."well_authorization_number_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFacility',
            fields=[
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_comment='Primary key to identify the facility',
                        db_index=True,
                        default=uuid.uuid4,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(db_comment='The name of a facility', max_length=1000)),
                ('type', models.CharField(db_comment='The type of a facility', max_length=1000)),
                ('new_entrant', models.BooleanField(db_comment='Whether or not the facility is a new entrant')),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'address',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The address of the facility',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.address',
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'operation',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.operation',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical facility',
                'verbose_name_plural': 'historical facilitys',
                'db_table': 'erc_history"."facility_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='facility',
            name='operation',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, related_name='facilities', to='registration.operation'
            ),
        ),
        migrations.AddField(
            model_name='facility',
            name='updated_by',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='%(class)s_updated',
                to='registration.user',
            ),
        ),
    ]
