# Generated by Django 4.2.8 on 2024-01-18 23:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import localflavor.ca.models


class Migration(migrations.Migration):
    dependencies = [
        ('registration', '0002_prod_data'),
    ]

    operations = [
        migrations.AddField(
            model_name='historicaloperation',
            name='submission_date',
            field=models.DateTimeField(
                blank=True, db_comment='The time the user submitted the operation registration request', null=True
            ),
        ),
        migrations.AddField(
            model_name='operation',
            name='submission_date',
            field=models.DateTimeField(
                blank=True, db_comment='The time the user submitted the operation registration request', null=True
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='municipality',
            field=models.CharField(db_comment='Municipality of relevant location', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='address',
            name='postal_code',
            field=localflavor.ca.models.CAPostalCodeField(
                db_comment='Postal code of relevant location, limited to valid Canadian postal codes',
                max_length=7,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='province',
            field=localflavor.ca.models.CAProvinceField(
                db_comment='Province of the relevant location, restricted to two-letter province postal abbreviations',
                max_length=2,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='address',
            name='street_address',
            field=models.CharField(db_comment='Street address of relevant location)', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='municipality',
            field=models.CharField(db_comment='Municipality of relevant location', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='postal_code',
            field=localflavor.ca.models.CAPostalCodeField(
                db_comment='Postal code of relevant location, limited to valid Canadian postal codes',
                max_length=7,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='province',
            field=localflavor.ca.models.CAProvinceField(
                db_comment='Province of the relevant location, restricted to two-letter province postal abbreviations',
                max_length=2,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name='historicaladdress',
            name='street_address',
            field=models.CharField(db_comment='Street address of relevant location)', max_length=1000, null=True),
        ),
        migrations.AlterField(
            model_name='historicaloperator',
            name='bc_corporate_registry_number',
            field=models.CharField(
                db_comment='The BC corporate registry number of an operator',
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message='BC Corporate Registry Number should be 1-3 letters followed by 7 digits.',
                        regex='^[A-Za-z]{1,3}[0-9]{7}$',
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name='multipleoperator',
            name='business_structure',
            field=models.ForeignKey(
                db_comment='The business structure of an operator',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='multiple_operator',
                to='registration.businessstructure',
            ),
        ),
        migrations.AlterField(
            model_name='operation',
            name='naics_code',
            field=models.ForeignKey(
                db_comment="An operation or facility's NAICS code",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='%(class)ss',
                to='registration.naicscode',
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='bc_corporate_registry_number',
            field=models.CharField(
                db_comment='The BC corporate registry number of an operator',
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message='BC Corporate Registry Number should be 1-3 letters followed by 7 digits.',
                        regex='^[A-Za-z]{1,3}[0-9]{7}$',
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='business_structure',
            field=models.ForeignKey(
                db_comment='The business structure of an operator',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='operators',
                to='registration.businessstructure',
            ),
        ),
        migrations.AlterField(
            model_name='operator',
            name='physical_address',
            field=models.ForeignKey(
                db_comment='The physical address of an operator (where the operator is physically located)',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='operators_physical',
                to='registration.address',
            ),
        ),
        migrations.AddConstraint(
            model_name='operation',
            constraint=models.UniqueConstraint(fields=('swrs_facility_id',), name='swrs_facility_id_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='operator',
            constraint=models.UniqueConstraint(
                fields=('cra_business_number',), name='cra_business_number_unique_constraint'
            ),
        ),
    ]
