# Generated by Django 5.1.13 on 2025-10-30 22:16

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('compliance', '0008_V4_2_0'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='compliancechargerate',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='complianceearnedcredit',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='complianceobligation',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='compliancepenalty',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='compliancepenaltyaccrual',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='compliancepenaltyrate',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='complianceperiod',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='compliancereport',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='compliancereportversion',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='elicensingadjustment',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='elicensingclientoperator',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='elicensinginvoice',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='elicensinglineitem',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name='elicensingpayment',
            name='set_updated_audit_columns',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='compliancechargerate',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='a72148cfcbd5d19297e8fdad243a71c5bd48cc2f',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_83590',
                    table='erc"."compliance_charge_rate',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='complianceearnedcredit',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='3b57df4d451741d1d72a3dbd4d1f58e95f3fdf9f',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_bad21',
                    table='erc"."compliance_earned_credit',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='complianceobligation',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='77d64b99f52c40dfe97593d205165c77dffeba14',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_50bbc',
                    table='erc"."compliance_obligation',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='compliancepenalty',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='0a10663414920ceac908d899186c7d9ecfd09431',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_558eb',
                    table='erc"."compliance_penalty',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='compliancepenaltyaccrual',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='fc39621da1f078f2f686802f02d1e2cb24b2f236',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_d5e9b',
                    table='erc"."compliance_penalty_accrual',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='compliancepenaltyrate',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='c5f35ee7c68e05ddb435872d0f072fd9c7727892',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_71d28',
                    table='erc"."compliance_penalty_rate',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='complianceperiod',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='91c40995f9cc98cf7d737d8d98b7cd0b1b0f0827',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_fe1ba',
                    table='erc"."compliance_period',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='compliancereport',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='89ae965638cc6004c7f1a064c8fd041287609049',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_94204',
                    table='erc"."compliance_report',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='compliancereportversion',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='1206813980562d1e0ff93ad35177725632cf439d',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_69b47',
                    table='erc"."compliance_report_version',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='elicensingadjustment',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='46b107e19e30d0a4db45e4141f2431bbaeaa669c',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_1ec3b',
                    table='erc"."elicensing_adjustment',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='elicensingclientoperator',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='5ab9fa31db4b1c7c22ae89064da4f78c8c4b50b4',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_8f71f',
                    table='erc"."elicensing_client_operator',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='elicensinginvoice',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='69390cbc4bf8a5419c04b460ce985d50ef69d9a9',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_44bcd',
                    table='erc"."elicensing_invoice',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='elicensinglineitem',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='6cce9b82337c1861f77fb2d8f32e304004b9f50c',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_bee62',
                    table='erc"."elicensing_line_item',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='elicensingpayment',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select nullif(current_setting('my.guid', true), '')); new.updated_at = now(); return new;",
                    hash='d9a6f7fa32d0151860b98c8ce23f405d665601c1',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_26ab3',
                    table='erc"."elicensing_payment',
                    when='BEFORE',
                ),
            ),
        ),
    ]
