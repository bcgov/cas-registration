# Generated by Django 5.0.14 on 2025-05-16 18:23

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [('compliance', '0003_seed_compliance_charge_rates')]

    operations = [
        migrations.CreateModel(
            name='ComplianceEarnedCredits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'earned_credits_amount',
                    models.IntegerField(db_comment='The amount of earned credits. Whole numbers only.'),
                ),
                (
                    'issuance_status',
                    models.CharField(
                        choices=[
                            ('Issuance Requested', 'Issuance Requested'),
                            ('Awaiting Approval', 'Awaiting Approval'),
                            ('Approved', 'Approved'),
                            ('Credits Issued in BCCR', 'Credits Issued'),
                            ('Declined', 'Declined'),
                            ('Credits Not Issued in BCCR', 'Credits Not Issued'),
                            ('Changes Required', 'Changes Requested'),
                        ],
                        db_comment='The status of this of the earned credits in this record.',
                        default='Credits Not Issued in BCCR',
                        max_length=100,
                    ),
                ),
                (
                    'issued_date',
                    models.DateField(
                        blank=True, db_comment='The date on which the earned credits were issued', null=True
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'compliance_report_version',
                    models.ForeignKey(
                        db_comment='The compliance report version this earned_credit record belongs to',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='compliance_earned_credits',
                        to='compliance.compliancereportversion',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'issued_by',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The user who issed the earned credits',
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='compliance_earned_credits',
                        to='registration.user',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."compliance_earned_credits',
                'db_table_comment': 'A table to store BC earned credit compliance data. Earned credits are described in GGIRCA (https://www.bclaws.gov.bc.ca/civix/document/id/complete/statreg/14029_01#division_d0e1496) Division 4',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalComplianceEarnedCredits',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'earned_credits_amount',
                    models.IntegerField(db_comment='The amount of earned credits. Whole numbers only.'),
                ),
                (
                    'issuance_status',
                    models.CharField(
                        choices=[
                            ('Issuance Requested', 'Issuance Requested'),
                            ('Awaiting Approval', 'Awaiting Approval'),
                            ('Approved', 'Approved'),
                            ('Credits Issued in BCCR', 'Credits Issued'),
                            ('Declined', 'Declined'),
                            ('Credits Not Issued in BCCR', 'Credits Not Issued'),
                            ('Changes Required', 'Changes Requested'),
                        ],
                        db_comment='The status of this of the earned credits in this record.',
                        default='Credits Not Issued in BCCR',
                        max_length=100,
                    ),
                ),
                (
                    'issued_date',
                    models.DateField(
                        blank=True, db_comment='The date on which the earned credits were issued', null=True
                    ),
                ),
                ('history_user_id', models.UUIDField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                (
                    'history_type',
                    models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'compliance_report_version',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The compliance report version this earned_credit record belongs to',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='compliance.compliancereportversion',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'issued_by',
                    models.ForeignKey(
                        blank=True,
                        db_comment='The user who issed the earned credits',
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name='+',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'verbose_name': 'historical compliance earned credits',
                'verbose_name_plural': 'historical compliance earned creditss',
                'db_table': 'erc_history"."compliance_earned_credit_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='complianceearnedcredits',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select nullif(current_setting('my.guid', true), '')); new.created_at = now(); return new;",
                    hash='e8a32b38630a93feeabc19f3c67368bf08fb0915',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_2253d',
                    table='erc"."compliance_earned_credits',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='complianceearnedcredits',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid', true)); new.updated_at = now(); return new;",
                    hash='25da33ae4629d62bbd08ccd3e3e8d6c4303d347c',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_1e519',
                    table='erc"."compliance_earned_credits',
                    when='BEFORE',
                ),
            ),
        ),
    ]
