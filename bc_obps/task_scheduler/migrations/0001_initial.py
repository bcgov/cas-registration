# Generated by Django 5.1.10 on 2025-08-15 18:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='RetryTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_path', models.CharField(help_text='Full path to the function to execute', max_length=512)),
                (
                    'tag',
                    models.CharField(blank=True, help_text='Tag for categorizing and filtering tasks', max_length=100),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('pending', 'Pending'),
                            ('running', 'Running'),
                            ('completed', 'Completed'),
                            ('failed', 'Failed'),
                            ('inactive', 'Inactive'),
                        ],
                        default='pending',
                        help_text='Current status of the task',
                        max_length=20,
                    ),
                ),
                (
                    'next_run_time',
                    models.DateTimeField(blank=True, help_text='When this task should run next', null=True),
                ),
                (
                    'last_run_time',
                    models.DateTimeField(blank=True, help_text='When this task was last executed', null=True),
                ),
                (
                    'lock_acquired_at',
                    models.DateTimeField(blank=True, help_text='When the lock was acquired', null=True),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('error_history', models.JSONField(default=list, help_text='Last 5 error messages with timestamps')),
                ('kwargs', models.JSONField(default=dict, help_text='Keyword arguments to pass to the function')),
                ('max_retries', models.PositiveIntegerField(default=3, help_text='Maximum number of retry attempts')),
                ('retry_count', models.PositiveIntegerField(default=0, help_text='Current retry attempt number')),
                (
                    'retry_delay_minutes',
                    models.PositiveIntegerField(default=5, help_text='Delay in minutes between retry attempts'),
                ),
            ],
            options={
                'db_table': 'common"."retry_task',
                'db_table_comment': 'Retry tasks created when functions fail',
                'indexes': [
                    models.Index(fields=['status', 'next_run_time'], name='retry_task_status_006913_idx'),
                    models.Index(fields=['tag', 'status'], name='retry_task_tag_233003_idx'),
                ],
            },
        ),
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function_path', models.CharField(help_text='Full path to the function to execute', max_length=512)),
                (
                    'tag',
                    models.CharField(blank=True, help_text='Tag for categorizing and filtering tasks', max_length=100),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('pending', 'Pending'),
                            ('running', 'Running'),
                            ('completed', 'Completed'),
                            ('failed', 'Failed'),
                            ('inactive', 'Inactive'),
                        ],
                        default='pending',
                        help_text='Current status of the task',
                        max_length=20,
                    ),
                ),
                (
                    'next_run_time',
                    models.DateTimeField(blank=True, help_text='When this task should run next', null=True),
                ),
                (
                    'last_run_time',
                    models.DateTimeField(blank=True, help_text='When this task was last executed', null=True),
                ),
                (
                    'lock_acquired_at',
                    models.DateTimeField(blank=True, help_text='When the lock was acquired', null=True),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('error_history', models.JSONField(default=list, help_text='Last 5 error messages with timestamps')),
                (
                    'schedule_type',
                    models.CharField(
                        choices=[
                            ('minutes', 'Every X Minutes'),
                            ('hourly', 'Every X Hours'),
                            ('daily', 'Daily at Fixed Time'),
                            ('weekly', 'Weekly on Specific Day'),
                            ('monthly', 'Monthly on Specific Day'),
                            ('yearly', 'Yearly on Specific Date'),
                        ],
                        help_text='Type of schedule',
                        max_length=20,
                    ),
                ),
                (
                    'schedule_interval',
                    models.PositiveIntegerField(
                        blank=True, help_text='Interval for MINUTES/HOURLY schedules', null=True
                    ),
                ),
                (
                    'schedule_hour',
                    models.PositiveIntegerField(blank=True, help_text='Hour (0-23) for fixed time', null=True),
                ),
                (
                    'schedule_minute',
                    models.PositiveIntegerField(blank=True, help_text='Minute (0-59) for fixed time', null=True),
                ),
                (
                    'schedule_day_of_week',
                    models.PositiveIntegerField(blank=True, help_text='Day of week (0=Monday, 6=Sunday)', null=True),
                ),
                (
                    'schedule_day_of_month',
                    models.PositiveIntegerField(blank=True, help_text='Day of month (1-31)', null=True),
                ),
                (
                    'schedule_month',
                    models.PositiveIntegerField(blank=True, help_text='Month (1-12) for yearly schedules', null=True),
                ),
            ],
            options={
                'db_table': 'common"."scheduled_task',
                'db_table_comment': 'Scheduled tasks that run on a regular basis',
                'indexes': [
                    models.Index(fields=['status', 'next_run_time'], name='scheduled_t_status_bbd93c_idx'),
                    models.Index(fields=['tag', 'status'], name='scheduled_t_tag_aef11c_idx'),
                ],
            },
        ),
    ]
