# Generated by Django 5.0.7 on 2024-08-14 21:35

from django.db import migrations

#### CONFIG DATA ####

def init_configuration_element_data(apps, schema_monitor):
    '''
    Add initial data to erc.configuration_element
    '''

    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')
    SourceType = apps.get_model('reporting', 'SourceType')
    GasType = apps.get_model('reporting', 'GasType')
    Methodology = apps.get_model('reporting', 'Methodology')
    Configuration = apps.get_model('reporting', 'Configuration')
    # Fuel combustion by mobile equipment that is part of the facility
    ConfigurationElement.objects.bulk_create(
        [
            # CO2
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
                methodology_id=Methodology.objects.get(name='Default EF').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
                methodology_id=Methodology.objects.get(name='Site-specific EF').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
                methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
                methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            # CH4
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='Default EF').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='Site-specific EF').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            # N2O
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
                methodology_id=Methodology.objects.get(name='Default EF').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
                methodology_id=Methodology.objects.get(name='Site-specific EF').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
                methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
                methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
        ]
    )

def reverse_init_configuration_element_data(apps, schema_monitor):
    '''
    Remove initial data from erc.configuration_element
    '''
    Configuration = apps.get_model('reporting', 'Configuration')
    ReportingActivity = apps.getmodel('reporting', 'ReportingActivity')
    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    ConfigurationElement.objects.filter(
        reporting_activity_id=ReportingActivity.objects.get(name='Fuel combustion by mobile equipment').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).delete()


def init_configuration_element_reporting_fields_data(apps, schema_monitor):
    '''
    Add initial data to erc.activity_source_type_base_schema
    '''
    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')
    SourceType = apps.get_model('reporting', 'SourceType')
    GasType = apps.get_model('reporting', 'GasType')
    Methodology = apps.get_model('reporting', 'Methodology')
    Configuration = apps.get_model('reporting', 'Configuration')
    ReportingField = apps.get_model('reporting', 'ReportingField')
    # CO2 - Default EF - Unit-Fuel-CO2 Default Emission Factor
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
        methodology_id=Methodology.objects.get(name='Default EF').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(
        ReportingField.objects.get(field_name='Unit-Fuel-CO2 Default Emission Factor', field_units='kg/fuel units')
    )
    # CO2 - Site-specific EF - Unit-Fuel-CO2 Measured Emission Factor
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
        methodology_id=Methodology.objects.get(name='Site-specific EF').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(
        ReportingField.objects.get(field_name='Unit-Fuel-CO2 Measured Emission Factor', field_units='kg/fuel units')
    )
    # CO2 - Alternative Parameter Measurement - Description
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
        methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(ReportingField.objects.get(field_name='Description', field_units__isnull=True))
    # CO2 - Replacement Methodology - Description
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CO2').id,
        methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(ReportingField.objects.get(field_name='Description', field_units__isnull=True))

    # CH4 - Default EF - Unit-Fuel-CH4 Default Emission Factor
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
        methodology_id=Methodology.objects.get(name='Default EF').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(
        ReportingField.objects.get(field_name='Unit-Fuel-CH4 Default Emission Factor', field_units='kg/fuel units')
    )
    # CH4 - Site-specific EF - Unit-Fuel-CH4 Measured Emission Factor
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
        methodology_id=Methodology.objects.get(name='Site-specific EF').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(
        ReportingField.objects.get(field_name='Unit-Fuel-CH4 Measured Emission Factor', field_units='kg/fuel units')
    )
    # CH4 - Alternative Parameter Measurement - Description
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
        methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(ReportingField.objects.get(field_name='Description', field_units__isnull=True))
    # CH4 - Replacement Methodology - Description
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
        methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(ReportingField.objects.get(field_name='Description', field_units__isnull=True))
    # N2O - Default EF - Unit-Fuel-N20 Default Emission Factor
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
        methodology_id=Methodology.objects.get(name='Default EF').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(
        ReportingField.objects.get(field_name='Unit-Fuel-N2O Default Emission Factor', field_units='kg/fuel units')
    )
    # N2O - Site-specific EF - Unit-Fuel-CO2 Measured Emission Factor
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
        methodology_id=Methodology.objects.get(name='Site-specific EF').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(
        ReportingField.objects.get(field_name='Unit-Fuel-N2O Measured Emission Factor', field_units='kg/fuel units')
    )
    # N2O - Alternative Parameter Measurement - Description
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
        methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(ReportingField.objects.get(field_name='Description', field_units__isnull=True))
    # N2O - Replacement Methodology - Description
    ConfigurationElement.objects.get(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        source_type_id=SourceType.objects.get(
            name='Fuel combustion by mobile equipment that is part of the facility'
        ).id,
        gas_type_id=GasType.objects.get(chemical_formula='N2O').id,
        methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).reporting_fields.add(ReportingField.objects.get(field_name='Description', field_units__isnull=True))


def reverse_init_configuration_element_reporting_fields_data(apps, schema_monitor):
    '''
    Remove data from erc.configuration_element_reporting_fields
    '''
    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')

    ConfigurationElement.reporting_fields.through.objects.filter(
        configurationelement_id__in=ConfigurationElement.objects.filter(
            reporting_activity_id=ReportingActivity.objects.get(
                name='Fuel combustion by mobile equipment'
            ).id
        ).values_list('id', flat=True)
    ).delete()


#### SCHEMA DATA ####
def init_activity_schema_data(apps, schema_monitor):
    '''
    Add initial schema data to erc.activity_schema
    '''
    ## Import JSON data
    import os

    cwd = os.getcwd()
    with open(f'{cwd}/reporting/json_schemas/2024/fuel_combustion_mobile/activity.json') as mfuel:
        schema = json.load(mfuel)

    ActivitySchema = apps.get_model('reporting', 'ActivityJsonSchema')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')
    Configuration = apps.get_model('reporting', 'Configuration')
    ActivitySchema.objects.create(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id,
        json_schema=schema,
        valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    )


def reverse_init_activity_schema_data(apps, schema_monitor):
    '''
    Remove initial data from erc.base_schema
    '''
    ActivitySchema = apps.get_model('reporting', 'ActivityJsonSchema')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')
    ActivitySchema.objects.filter(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id
    ).delete()


# SOURCE TYPE
def init_activity_source_type_schema_data(apps, schema_monitor):
    '''
    Add initial schema data to erc.activity_source_type_schema
    '''
    ## Import JSON data
    import os

    cwd = os.getcwd()
    with open(f'{cwd}/reporting/json_schemas/2024/gsc_excluding_line_tracing/with_useful_energy.json') as mfuel_st:
        schema = json.load(mfuel_st)

    ActivitySourceTypeSchema = apps.get_model('reporting', 'ActivitySourceTypeJsonSchema')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')
    SourceType = apps.get_model('reporting', 'SourceType')
    Configuration = apps.get_model('reporting', 'Configuration')
    ActivitySourceTypeSchema.objects.bulk_create(
        [
            ActivitySourceTypeSchema(
                reporting_activity_id=ReportingActivity.objects.get(
                    name='Fuel combustion by mobile equipment'
                ).id,
                source_type_id=SourceType.objects.get(
                    name='Fuel combustion by mobile equipment that is part of the facility'
                ).id,
                json_schema=schema,
                valid_from_id=Configuration.objects.get(valid_from='2024-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
        ]
    )


def reverse_init_activity_source_type_schema_data(apps, schema_monitor):
    '''
    Remove initial data from erc.base_schema
    '''
    ActivitySourceTypeJsonSchema = apps.get_model('reporting', 'ActivitySourceTypeJsonSchema')
    ReportingActivity = apps.get_model('registration', 'ReportingActivity')
    ActivitySourceTypeJsonSchema.objects.filter(
        reporting_activity_id=ReportingActivity.objects.get(
            name='Fuel combustion by mobile equipment'
        ).id
    ).delete()


class Migration(migrations.Migration):

    dependencies = [('reporting', '0011_combustion_for_line_tracing_data')]

    operations = [
        migrations.RunPython(init_configuration_element_data, reverse_init_configuration_element_data),
        migrations.RunPython(
            init_configuration_element_reporting_fields_data, reverse_init_configuration_element_reporting_fields_data
        ),
        migrations.RunPython(init_activity_schema_data, reverse_init_activity_schema_data),
        migrations.RunPython(init_activity_source_type_schema_data, reverse_init_activity_source_type_schema_data),
    ]
