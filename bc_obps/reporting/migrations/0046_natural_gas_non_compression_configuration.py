# Generated by Django 5.0.10 on 2025-01-27 18:54

from django.db import migrations

#### ADDITIONAL METHODOLOGIES ####


def init_additional_methodology_data(apps, schema_monitor):
    """
    Add additional data to erc.methodology
    """
    Methodology = apps.get_model("reporting", "Methodology")
    Methodology.objects.bulk_create(
        [
            Methodology(name="WCI.353 (a)(1)"),
            Methodology(name="WCI.353 (a)(2)"),
            Methodology(name="WCI.353 (a.1)(1)"),
            Methodology(name="WCI.353 (a.1)(2)"),
            Methodology(name="WCI.353 (b)"),
            Methodology(name="WCI.353 (b.1)"),
            Methodology(name="WCI.353 (c)"),
            Methodology(name="WCI.353 (d)"),
            Methodology(name="WCI.353 (g)"),
            Methodology(name="CEPEI Methodology Manual"),
            Methodology(name="WCI.353 (h)"),
            Methodology(name="WCI.353 (m)"),
            Methodology(name="Other CGA Methodology"),
            Methodology(name="WCI.353 (c.1)(i)"),
            Methodology(name="WCI.353 (c.1)(ii)"),
        ]
    )


def reverse_additional_methodology_data(apps, schema_monitor):
    """
    Remove additional data from erc.methodology
    """
    Methodology = apps.get_model("reporting", "Methodology")
    Methodology.objects.filter(
        name__in=[
            "WCI.353 (a)(1)",
            "WCI.353 (a)(2)",
            "WCI.353 (a.1)(1)",
            "WCI.353 (a.1)(2)",
            "WCI.353 (b)",
            "WCI.353 (b.1)",
            "WCI.353 (c)",
            "WCI.353 (d)",
            "WCI.353 (g)",
            "CEPEI Methodology Manual",
            "WCI.353 (h)",
            "WCI.353 (m)",
            "Other CGA Methodology",
            "WCI.353 (c.1)(i)",
            "WCI.353 (c.1)(ii)",
        ]
    ).delete()


#### CONFIG DATA ####


def init_configuration_element_data(apps, schema_monitor):
    ConfigurationElement = apps.get_model("reporting", "ConfigurationElement")
    Activity = apps.get_model("registration", "Activity")
    SourceType = apps.get_model("reporting", "SourceType")
    GasType = apps.get_model("reporting", "GasType")
    Methodology = apps.get_model("reporting", "Methodology")
    Configuration = apps.get_model("reporting", "Configuration")

    ng_non_compression_activity = Activity.objects.get(
        name="Non-compression and non-processing activities for the purpose of natural gas transmission, natural gas distribution, natural gas storage, carbon dioxide transportation or oil transmission"
    )

    # Source Type: NG Pneumatic high bleed device venting
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Natural gas pneumatic high bleed device venting"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (a)(1)",
            "WCI.353 (a)(2)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Natural gas pneumatic pump venting
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Natural gas pneumatic pump venting"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (a.1)(1)",
            "WCI.353 (a.1)(2)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Natural gas pneumatic low bleed device venting
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Natural gas pneumatic low bleed device venting"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (b)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Natural gas pneumatic intermittent device venting
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Natural gas pneumatic intermittent bleed device venting"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (b.1)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Blowdown venting
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Blowdown venting"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (c)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Flare stacks
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Flaring stacks"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (d)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
            "N2O",
        ]
    )

    # Source type: Equipment leaks detected using leak detection and leaker emission factor methods
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(
                name="Equipment leaks detected using leak detection and leaker emission factor methods"
            ),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (g)",
            "CEPEI Methodology Manual",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Population count sources
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Population count sources"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (h)",
            "CEPEI Methodology Manual",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Transmission storage tanks
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Transmission storage tanks"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (m)",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Other venting sources
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Other venting sources"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "CEPEI Methodology Manual",
            "Other CGA Methodology",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Other fugigitve sources
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Other fugitive sources"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "CEPEI Methodology Manual",
            "Other CGA Methodology",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )

    # Source type: Third party line hits with release of gas
    ConfigurationElement.objects.bulk_create(
        ConfigurationElement(
            activity=ng_non_compression_activity,
            source_type=SourceType.objects.get(name="Third party line hits with release of gas"),
            gas_type=GasType.objects.get(chemical_formula=gas_formula),
            methodology=Methodology.objects.get(name=methodology_name),
            valid_from=Configuration.objects.get(valid_from="2023-01-01"),
            valid_to=Configuration.objects.get(valid_to="2099-12-31"),
        )
        for methodology_name in [
            "WCI.353 (c.1)(i)",
            "WCI.353 (c.1)(ii)",
            "CEPEI Methodology Manual",
            "Alternative Parameter Measurement",
            "Replacement Methodology",
        ]
        for gas_formula in [
            "CO2",
            "CH4",
        ]
    )


def reverse_configuration_element_data(apps, schema_monitor):
    ConfigurationElement = apps.get_model("reporting", "ConfigurationElement")
    Activity = apps.get_model("registration", "Activity")
    Configuration = apps.get_model("reporting", "Configuration")

    ng_non_compression_activity = Activity.objects.get(
        name="""Non-compression and non-processing activities for the purpose of natural gas transmission,
                natural gas distribution, natural gas storage, carbon dioxide transportation or oil transmission"""
    )

    ConfigurationElement.objects.filter(
        activity=ng_non_compression_activity,
        valid_from=Configuration.objects.get(valid_from="2023-01-01"),
        valid_to=Configuration.objects.get(valid_to="2099-12-31"),
    ).delete()


#### ACTIVITY SCHEMA ####
class Migration(migrations.Migration):
    dependencies = [
        ("reporting", "0045_fix_incorrect_fkey_on_deletes"),
    ]

    operations = [
        migrations.RunPython(
            init_additional_methodology_data,
            reverse_additional_methodology_data,
        ),
        migrations.RunPython(
            init_configuration_element_data,
            reverse_configuration_element_data,
        ),
    ]
