# Generated by Django 5.0.14 on 2025-04-17 10:01

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0105_V2_3_0'),
        ('reporting', '0089_reportattachment_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportAttachmentConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'confirm_supplementary_required_attachments_uploaded',
                    models.BooleanField(
                        blank=True,
                        db_comment='Whether the user confirmed that any attachments required for the supplementary report were uploaded.',
                        null=True,
                    ),
                ),
                (
                    'confirm_supplementary_existing_attachments_relevant',
                    models.BooleanField(
                        blank=True,
                        db_comment='Whether the user confirmed that previously uploaded attachments that have not been updated are still relevant to the supplementary report.',
                        null=True,
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'report_version',
                    models.ForeignKey(
                        db_comment='The report this attachment confirmation information relates to',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='report_attachment_confirmation',
                        to='reporting.reportversion',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."report_attachment_confirmation',
                'db_table_comment': 'Table containing attachment confirmation information for the report version',
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='reportattachmentconfirmation',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid', true)); new.created_at = now(); return new;",
                    hash='9e261494cdd8776609a85d497dc0de2d3fcf0ae3',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_d0203',
                    table='erc"."report_attachment_confirmation',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='reportattachmentconfirmation',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid', true)); new.updated_at = now(); return new;",
                    hash='3157cb59a5bd38b417d3e5dece95d9d1be206077',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_b4aac',
                    table='erc"."report_attachment_confirmation',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='reportattachmentconfirmation',
            trigger=pgtrigger.compiler.Trigger(
                name='immutable_report_version',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n            declare\n                status text;\n            begin\n                select rel1.status into status\n                from "erc"."report_version" rel1\n                join "erc"."report_attachment_confirmation" rel2 on rel2.report_version_id=rel1.id\n                where rel2.id=new.id\n                limit 1;\n\n                if status=\'Submitted\' then\n                    raise exception \'reportattachmentconfirmation record is immutable after a report version has been submitted\';\n                end if;\n\n                return new;\n            end;\n            ',
                    hash='26626723df260319cf2bdee797b3c854698b33a0',
                    operation='UPDATE',
                    pgid='pgtrigger_immutable_report_version_5f121',
                    table='erc"."report_attachment_confirmation',
                    when='BEFORE',
                ),
            ),
        ),
    ]
