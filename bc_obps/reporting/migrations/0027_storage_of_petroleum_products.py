# Generated by Django 5.0.9 on 2023-10-21 22:20

from django.db import migrations
import os
import json


def init_configuration_element_data(apps, schema_monitor):
    '''
    Add initial data to erc.configuration_element
    '''

    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    Activity = apps.get_model('registration', 'Activity')
    SourceType = apps.get_model('reporting', 'SourceType')
    GasType = apps.get_model('reporting', 'GasType')
    Methodology = apps.get_model('reporting', 'Methodology')
    Configuration = apps.get_model('reporting', 'Configuration')
    # Pulping and chemical recovery
    ConfigurationElement.objects.bulk_create(
        [
            # CH4
            ConfigurationElement(
                activity_id=Activity.objects.get(name='Storage of petroleum products').id,
                source_type_id=SourceType.objects.get(name='Above-ground storage tanks').id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='WCI.203(f)(1)').id,
                valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                activity_id=Activity.objects.get(name='Storage of petroleum products').id,
                source_type_id=SourceType.objects.get(name='Above-ground storage tanks').id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='WCI.203(f)(2)').id,
                valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                activity_id=Activity.objects.get(name='Storage of petroleum products').id,
                source_type_id=SourceType.objects.get(name='Above-ground storage tanks').id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='Alternative Parameter Measurement Methodology').id,
                valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
            ConfigurationElement(
                activity_id=Activity.objects.get(name='Storage of petroleum products').id,
                source_type_id=SourceType.objects.get(name='Above-ground storage tanks').id,
                gas_type_id=GasType.objects.get(chemical_formula='CH4').id,
                methodology_id=Methodology.objects.get(name='Replacement Methodology').id,
                valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            ),
        ]
    )


def reverse_init_configuration_element_data(apps, schema_monitor):
    '''
    Remove initial data from erc.configuration_element
    '''
    Configuration = apps.get_model('reporting', 'Configuration')
    Activity = apps.get_model('registration', 'Activity')
    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    ConfigurationElement.objects.filter(
        activity_id=Activity.objects.get(name='Storage of petroleum products').id,
        valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    ).delete()


def init_configuration_element_reporting_fields_data(apps, schema_editor):
    """
    Add initial data to erc.activity_source_type_base_schema
    """
    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    Activity = apps.get_model('registration', 'Activity')
    SourceType = apps.get_model('reporting', 'SourceType')
    GasType = apps.get_model('reporting', 'GasType')
    Methodology = apps.get_model('reporting', 'Methodology')
    Configuration = apps.get_model('reporting', 'Configuration')
    ReportingField = apps.get_model('reporting', 'ReportingField')

    activity = Activity.objects.get(name='Storage of petroleum products')
    source_type = SourceType.objects.get(name='Above-ground storage tanks')
    gas_type = GasType.objects.get(chemical_formula='CH4')
    valid_from = Configuration.objects.get(valid_from='2023-01-01')
    valid_to = Configuration.objects.get(valid_to='2099-12-31')

    # CH4 - Alternative Parameter Measurement Methodology - Description
    methodology_alt = Methodology.objects.get(name='Alternative Parameter Measurement Methodology')
    config_element_alt = ConfigurationElement.objects.get(
        activity_id=activity.id,
        source_type_id=source_type.id,
        gas_type_id=gas_type.id,
        methodology_id=methodology_alt.id,
        valid_from=valid_from,
        valid_to=valid_to,
    )
    config_element_alt.reporting_fields.add(
        ReportingField.objects.get(field_name='Description', field_units__isnull=True)
    )

    # CH4 - Replacement Methodology - Description
    methodology_rep = Methodology.objects.get(name='Replacement Methodology')
    config_element_rep = ConfigurationElement.objects.get(
        activity_id=activity.id,
        source_type_id=source_type.id,
        gas_type_id=gas_type.id,
        methodology_id=methodology_rep.id,
        valid_from=valid_from,
        valid_to=valid_to,
    )
    config_element_rep.reporting_fields.add(
        ReportingField.objects.get(field_name='Description', field_units__isnull=True)
    )


def reverse_init_configuration_element_reporting_fields_data(apps, schema_monitor):
    '''
    Remove initial data from erc.configuration_element_reporting_fields
    '''
    ConfigurationElement = apps.get_model('reporting', 'ConfigurationElement')
    Activity = apps.get_model('registration', 'Activity')

    ConfigurationElement.reporting_fields.through.objects.filter(
        configurationelement_id__in=ConfigurationElement.objects.filter(
            activity_id=Activity.objects.get(name='Storage of petroleum products').id
        ).values_list('id', flat=True)
    ).delete()


#### SCHEMA DATA ####
def init_activity_schema_data(apps, schema_monitor):
    '''
    Add initial schema data to erc.activity_schema
    '''
    ## Import JSON data

    cwd = os.getcwd()
    with open(f'{cwd}/reporting/json_schemas/2024/storage_of_petroleum_products/activity.json') as storageofpetroleum:
        schema = json.load(storageofpetroleum)

    ActivitySchema = apps.get_model('reporting', 'ActivityJsonSchema')
    Activity = apps.get_model('registration', 'Activity')
    Configuration = apps.get_model('reporting', 'Configuration')
    ActivitySchema.objects.create(
        activity_id=Activity.objects.get(name='Storage of petroleum products').id,
        json_schema=schema,
        valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
        valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
    )


def reverse_init_activity_schema_data(apps, schema_monitor):
    '''
    Remove initial data from erc.base_schema
    '''
    ActivitySchema = apps.get_model('reporting', 'ActivityJsonSchema')
    Activity = apps.get_model('registration', 'Activity')
    ActivitySchema.objects.filter(activity_id=Activity.objects.get(name='Storage of petroleum products').id).delete()


#### SOURCE TYPE DATA ####
def init_activity_source_type_schema_data(apps, schema_monitor):
    '''
    Add initial data to erc.activity_schema
    '''
    ## Import JSON data

    cwd = os.getcwd()
    with open(
        f'{cwd}/reporting/json_schemas/2024/storage_of_petroleum_products/above_ground_storage_tanks.json'
    ) as storage_of_petroleum:
        schema = json.load(storage_of_petroleum)

    ActivitySourceTypeSchema = apps.get_model('reporting', 'ActivitySourceTypeJsonSchema')
    Activity = apps.get_model('registration', 'Activity')
    SourceType = apps.get_model('reporting', 'SourceType')
    Configuration = apps.get_model('reporting', 'Configuration')
    ActivitySourceTypeSchema.objects.bulk_create(
        [
            ActivitySourceTypeSchema(
                activity_id=Activity.objects.get(name='Storage of petroleum products').id,
                source_type_id=SourceType.objects.get(name='Above-ground storage tanks').id,
                has_unit=False,
                has_fuel=False,
                json_schema=schema,
                valid_from_id=Configuration.objects.get(valid_from='2023-01-01').id,
                valid_to_id=Configuration.objects.get(valid_to='2099-12-31').id,
            )
        ]
    )


def reverse_init_activity_source_type_schema_data(apps, schema_monitor):
    '''
    Remove initial data from erc.base_schema
    '''
    ActivitySourceTypeJsonSchema = apps.get_model('reporting', 'ActivitySourceTypeJsonSchema')
    Activity = apps.get_model('registration', 'Activity')
    ActivitySourceTypeJsonSchema.objects.filter(
        activity_id=Activity.objects.get(name='Storage of petroleum products').id
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('reporting', '0026_reportmethodology_methodology'),
    ]

    operations = [
        migrations.RunPython(
            init_configuration_element_data,
            reverse_init_configuration_element_data,
        ),
        migrations.RunPython(
            init_configuration_element_reporting_fields_data,
            reverse_init_configuration_element_reporting_fields_data,
        ),
        migrations.RunPython(
            init_activity_schema_data,
            reverse_init_activity_schema_data,
        ),
        migrations.RunPython(
            init_activity_source_type_schema_data,
            reverse_init_activity_source_type_schema_data,
        ),
    ]
