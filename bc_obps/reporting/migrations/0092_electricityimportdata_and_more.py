# Generated by Django 5.0.14 on 2025-04-23 21:33

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0107_V3_0_0'),
        ('reporting', '0091_V3_0_0'),
    ]

    operations = [
        migrations.CreateModel(
            name='ElectricityImportData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'import_specified_electricity',
                    models.DecimalField(
                        blank=True,
                        db_comment='Amount of imported electricity - specified sources',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'import_specified_emissions',
                    models.DecimalField(
                        blank=True,
                        db_comment='Emissions from specified imports',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'import_unspecified_electricity',
                    models.DecimalField(
                        blank=True,
                        db_comment='Amount of imported electricity - unspecified sources',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'import_unspecified_emissions',
                    models.DecimalField(
                        blank=True,
                        db_comment='Emissions from unspecified imports',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'export_specified_electricity',
                    models.DecimalField(
                        blank=True,
                        db_comment='Amount of exported electricity - specified sources',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'export_specified_emissions',
                    models.DecimalField(
                        blank=True,
                        db_comment='Emissions from specified exports',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'export_unspecified_electricity',
                    models.DecimalField(
                        blank=True,
                        db_comment='Amount of exported electricity - unspecified sources',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'export_unspecified_emissions',
                    models.DecimalField(
                        blank=True,
                        db_comment='Emissions from unspecified exports',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'canadian_entitlement_electricity',
                    models.DecimalField(
                        blank=True,
                        db_comment='Amount of electricity categorized as Canadian Entitlement Power',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'canadian_entitlement_emissions',
                    models.DecimalField(
                        blank=True,
                        db_comment='Emissions from Canadian Entitlement Power',
                        decimal_places=4,
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'report_version',
                    models.ForeignKey(
                        db_comment='The associated report version for this electricity import data',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='electricity_import_data',
                        to='reporting.reportversion',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."electricity_import_data',
                'db_table_comment': 'Table storing Electricity Import Data for the reporting system',
                'abstract': False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='electricityimportdata',
            trigger=pgtrigger.compiler.Trigger(
                name='set_created_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.created_by_id = (select current_setting('my.guid', true)); new.created_at = now(); return new;",
                    hash='cd152c3a15f68ebc98ef890d794380af85de676b',
                    operation='INSERT',
                    pgid='pgtrigger_set_created_audit_columns_6a2f2',
                    table='erc"."electricity_import_data',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='electricityimportdata',
            trigger=pgtrigger.compiler.Trigger(
                name='set_updated_audit_columns',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="new.updated_by_id = (select current_setting('my.guid', true)); new.updated_at = now(); return new;",
                    hash='be08b8b2dded3e691f398a057115d8c012f4dbcb',
                    operation='UPDATE',
                    pgid='pgtrigger_set_updated_audit_columns_65cb5',
                    table='erc"."electricity_import_data',
                    when='BEFORE',
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='electricityimportdata',
            trigger=pgtrigger.compiler.Trigger(
                name='immutable_report_version',
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n            declare\n                status text;\n            begin\n                select rel1.status into status\n                from "erc"."report_version" rel1\n                join "erc"."electricity_import_data" rel2 on rel2.report_version_id=rel1.id\n                where rel2.id=new.id\n                limit 1;\n\n                if status=\'Submitted\' then\n                    raise exception \'electricityimportdata record is immutable after a report version has been submitted\';\n                end if;\n\n                return new;\n            end;\n            ',
                    hash='97e77b1c0a310dd8b9e6b62f6565745b7322633c',
                    operation='UPDATE',
                    pgid='pgtrigger_immutable_report_version_b14f9',
                    table='erc"."electricity_import_data',
                    when='BEFORE',
                ),
            ),
        ),
    ]
