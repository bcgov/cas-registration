# Generated by Django 5.0.8 on 2024-11-05 16:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0051_bcgreenhousegasid_historicalbcgreenhousegasid'),
        ('reporting', '0028_gastype_cas_number_gwp_with_data'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='facilityreport',
            name='products',
        ),
        migrations.CreateModel(
            name='ReportProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                (
                    'annual_production',
                    models.FloatField(
                        db_comment='The total annual production for the product, expressed in the unit of this same model.'
                    ),
                ),
                (
                    'production_data_apr_dec',
                    models.FloatField(
                        db_comment='The total production amount for April to December period, expressed in the unit of this same model.'
                    ),
                ),
                (
                    'production_methodology',
                    models.CharField(
                        db_comment='The production methodlogy used to make this product', max_length=10000
                    ),
                ),
                (
                    'storage_quantity_start_of_period',
                    models.FloatField(
                        blank=True,
                        db_comment='The quantity of product in storage at the beginning of the compliance period, if applicable',
                        null=True,
                    ),
                ),
                (
                    'storage_quantity_end_of_period',
                    models.FloatField(
                        blank=True,
                        db_comment='The quantity of product in storage at the end of the compliance period, if applicable',
                        null=True,
                    ),
                ),
                (
                    'quantity_sold_during_period',
                    models.FloatField(
                        blank=True,
                        db_comment='The quantity of product sold during the compliance period, if applicable',
                        null=True,
                    ),
                ),
                (
                    'quantity_throughput_during_period',
                    models.FloatField(
                        blank=True,
                        db_comment='The quantity of throughput at point of sale during the compliance period, if applicable',
                        null=True,
                    ),
                ),
                (
                    'archived_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_archived',
                        to='registration.user',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_created',
                        to='registration.user',
                    ),
                ),
                (
                    'facility_report',
                    models.ForeignKey(
                        db_comment='The facility report this production information belongs to',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='report_products',
                        to='reporting.facilityreport',
                    ),
                ),
                (
                    'product',
                    models.ForeignKey(
                        db_comment='The product this production information is about',
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='report_products',
                        to='registration.regulatedproduct',
                    ),
                ),
                (
                    'report_version',
                    models.ForeignKey(
                        db_comment='The report this production information relates to',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='report_products',
                        to='reporting.reportversion',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='%(class)s_updated',
                        to='registration.user',
                    ),
                ),
            ],
            options={
                'db_table': 'erc"."report_product',
                'db_table_comment': 'A table storing the production information for a single product, as part of a facility report',
            },
        ),
        migrations.AddConstraint(
            model_name='reportproduct',
            constraint=models.UniqueConstraint(
                fields=('facility_report', 'product'),
                name='unique_report_product_per_product_and_facility_report',
                violation_error_message='A FacilityReport can only have one ReportProduct per product',
            ),
        ),
    ]
