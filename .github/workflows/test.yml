name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn
        working-directory: ./client
      - name: jest
        run: yarn test
        working-directory: ./client

  # yarn-audit:
  #   needs: install-client-dev-tools
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: dev env setup
  #       uses: ./.github/actions/dev-env-setup
  #     - run: yarn audit-deps
  #       working-directory: ./app

  # docker-build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - image: ghcr.io/bcgov/cas-cif-app
  #           context: .
  #           dockerfile: app/Dockerfile
  #           name: app
  #         - image: ghcr.io/bcgov/cas-cif-schema
  #           context: .
  #           dockerfile: schema/Dockerfile
  #           name: schema
  #         - image: ghcr.io/bcgov/cas-cif-test-backups
  #           context: .
  #           dockerfile: database_backup_test/Dockerfile
  #           name: testBackups
  #   name: Build ${{ matrix.name }} docker image
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #       with:
  #         install: true
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v3
  #       with:
  #         images: ${{ matrix.image }}
  #         tags: |
  #           type=sha,format=long,prefix=
  #           latest
  #           type=ref,event=pr
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Cache Docker layers
  #       uses: actions/cache@v3
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-${{ matrix.name }}
  #     - name: Build image
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: ${{ matrix.context }}
  #         builder: ${{ steps.buildx.outputs.name }}
  #         push: true
  #         file: ${{ matrix.dockerfile }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,dest=/tmp/.buildx-cache-new
  #       # Temp fix
  #       # https://github.com/docker/build-push-action/issues/252
  #       # https://github.com/moby/buildkit/issues/1896
  #     - name: Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # e2e:
  #   needs: ["docker-build", "install-client-dev-tools"]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: dev env setup
  #       uses: ./.github/actions/dev-env-setup
  #     - name: run app locally
  #       uses: ./.github/actions/local-app-run
  #     - name: run e2e tests
  #       env:
  #         CYPRESS_TEST_INTERNAL_USERNAME: ${{ secrets.TEST_INTERNAL_USERNAME }}
  #         CYPRESS_TEST_INTERNAL_PASSWORD: ${{ secrets.TEST_INTERNAL_PASSWORD }}
  #         CYPRESS_TEST_ADMIN_USERNAME: ${{ secrets.TEST_ADMIN_USERNAME }}
  #         CYPRESS_TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}
  #         CYPRESS_TEST_UNAUTHORIZED_USERNAME: ${{ secrets.TEST_UNAUTHORIZED_USERNAME }}
  #         CYPRESS_TEST_UNAUTHORIZED_PASSWORD: ${{ secrets.TEST_UNAUTHORIZED_PASSWORD }}
  #         HAPPO_API_KEY: ${{ secrets.HAPPO_API_KEY }}
  #         HAPPO_API_SECRET: ${{ secrets.HAPPO_API_SECRET }}
  #       run: yarn test:e2e
  #       working-directory: ./app
