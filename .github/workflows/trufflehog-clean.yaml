name: TruffleHog Scan

on:
  workflow_call:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [opened, edited, synchronize]
  pull_request_review_comment:
    types: [created, edited]

jobs:
  trufflehog:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: read
      issues: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Always scan repo/commits when PR events happen
      - name: Run TruffleHog on repo code
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
        continue-on-error: true

      # For Issues & Comments, fetch body text and scan it
      - name: Prepare text to scan
        id: prepare_text
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = require('@actions/github');

            let text = "";

            if (context.eventName === "issues") {
              text = context.payload.issue?.body || "";
            } else if (context.eventName === "issue_comment") {
              text = context.payload.comment?.body || "";
            } else if (context.eventName === "pull_request") {
              text = context.payload.pull_request?.body || "";
            } else if (context.eventName === "pull_request_review_comment") {
              text = context.payload.comment?.body || "";
            }

            require("fs").writeFileSync("metadata.txt", text);
            core.setOutput("has_text", text.length > 0);

      - name: Run TruffleHog on metadata
        if: steps.prepare_text.outputs.has_text == 'true'
        run: |
          echo "Scanning metadata with TruffleHog..."
          trufflehog filesystem --path=./metadata.txt
        continue-on-error: true

      - name: Comment if secrets found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `üê∑ **TruffleHog Secret Detection Alert**

            ‚ö†Ô∏è **WARNING**: Potential secrets detected in this ${context.eventName.includes('pull_request') ? 'pull request' : 'issue'}!

            **Action Required**: Remove sensitive data before proceeding.

            ---
            *This is an automated security check by TruffleHog.*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue?.number || context.payload.pull_request?.number,
              body: commentBody
            });
