# name: docker-build-push

# on:
#   workflow_call:
#     inputs:
#       IMAGE:
#         required: true
#         type: string
#       IMAGE_REGISTRY:
#         required: true
#         type: string
#       WORKDIR:
#         required: true
#         type: string
#     secrets:
#       IMAGE_REGISTRY_USER:
#         required: true
#       IMAGE_REGISTRY_PASSWORD:
#         required: true
# jobs:
#   build:
#     name: Docker Build
#     runs-on: ubuntu-latest
#     timeout-minutes: 60
#     steps:
#     - name: Inject slug/short variables
#       uses: rlespinasse/github-slug-action@v3.x
#     - uses: actions/checkout@v2
#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v1
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.IMAGE_REGISTRY_USER }}
#         password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
#     - name: Build
#       working-directory: ${{ inputs.WORKDIR }}
#       run: >
#         docker buildx build
#         --platform=linux/amd64
#         -t ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
#         --output=type=image,push=true
#         ${GITHUB_WORKSPACE}/${{ inputs.WORKDIR }}
#   push:
#     name: Docker Push
#     needs: build
#     runs-on: ubuntu-latest
#     timeout-minutes: 60
#     steps:
#     - name: Inject slug/short variables
#       uses: rlespinasse/github-slug-action@v3.x
#     - uses: actions/checkout@v2
#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v1
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.IMAGE_REGISTRY_USER }}
#         password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}
#     - name: Tag Push Latest
#       working-directory: ${{ inputs.WORKDIR }}
#       run: >
#         docker buildx build
#         --platform=linux/amd64
#         -t ${{ inputs.IMAGE }}:${{ env.GITHUB_SHA_SHORT }}
#         -t ${{ inputs.IMAGE }}:latest
#         --output=type=image,push=true
#         ${GITHUB_WORKSPACE}/${{ inputs.WORKDIR }}