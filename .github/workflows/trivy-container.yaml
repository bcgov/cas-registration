name: Trivy Container Scan

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
        description: "Docker image to scan"
      image_tag:
        required: false
        type: string
        default: "latest"
        description: "Docker image tag to scan"

jobs:
  scan:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache Scan Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: callee-trivy-container-${{ github.workflow }}-${{ github.run_id }}
          restore-keys: trivy-container-
      - name: Run Trivy vulnerability scanner in container mode
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          scan-type: image
          image-ref: ${{ inputs.image }}:${{ inputs.image_tag }}
          format: sarif
          output: trivy-container-results.sarif
          exit-code: "0"
          ignore-unfixed: false
          severity: CRITICAL,HIGH,MEDIUM
          timeout: 10m0s
      - name: Upload Trivy container scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-container-results.sarif
          category: trivy-container-scan
      - name: Generate unique artifact name
        id: artifact-name
        run: |
          # Extract the image name without the registry prefix
          IMAGE_NAME=$(echo "${{ inputs.image }}" | sed 's|.*/||')
          echo "name=trivy-container-results-${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Upload Trivy container scan results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact-name.outputs.name }}
          path: trivy-container-results.sarif
