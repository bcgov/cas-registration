{{- if not (hasSuffix "-prod" .Release.Namespace)}}

apiVersion: batch/v1
kind: Job
metadata:
  labels:
{{- include "cas-bciers.labels" . | nindent 4 }}
    component: backend
  name: {{ template "cas-bciers.fullname" . }}-reset-database
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
spec:
  parallelism: 1
  completions: 1
  template:
    metadata:
      name: {{ template "cas-bciers.fullname" . }}-reset-database
      labels:
{{- include "cas-bciers.labels" . | nindent 8 }}
        component: backend
    spec:
      activeDeadlineSeconds: 180
      containers:
        - name:  {{ template "cas-bciers.fullname" . }}-reset-database
          image: postgres:14.6-alpine
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: cas-obps-postgres-pguser-postgres
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cas-obps-postgres-pguser-postgres
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  key: dbname
                  name: cas-obps-postgres-pguser-postgres
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: cas-obps-postgres-pguser-postgres
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: cas-obps-postgres-pguser-postgres
            - name: APP_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: cas-obps-postgres-pguser-registration
{{- if (hasSuffix "-test" .Release.Namespace)}}
          command:
            - /usr/bin/env
            - bash
            - -c
            - |
              psql -c "create schema if not exists preserve;";
              psql -c "create table preserve.user as (select * from erc.user);";
              psql -c "drop schema public cascade;";
              psql -c "create schema public;";
              psql -c "grant all on schema public to $(APP_USER);";
              psql -c "drop schema erc cascade;";
              psql -c "drop schema erc_history cascade;";
              psql -c "drop schema common cascade;";
{{ end }}
{{- if (hasSuffix "-dev" .Release.Namespace)}}
          command:
            - /usr/bin/env
            - bash
            - -c
            - |
              psql -c "drop schema public cascade;";
              psql -c "create schema public;";
              psql -c "grant all on schema public to $(APP_USER);";
              psql -c "drop schema erc cascade;";
              psql -c "drop schema erc_history cascade;";
              psql -c "drop schema common cascade;";
{{ end }}
      restartPolicy: Never
{{ end }}
